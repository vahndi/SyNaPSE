,arg_names,arg_text,arg_types,args_string,args_vals,class_name,link,module,section_name
0,"['damping', 'convergence_iter', 'max_iter', 'copy', 'preference', 'affinity', 'verbose']","['damping : float, optional, default: 0.5', 'convergence_iter : int, optional, default: 15', 'max_iter : int, optional, default: 200', 'copy : boolean, optional, default: True', 'preference : array-like, shape (n_samples,) or float, optional', 'affinity : string, optional, default=``euclidean``', 'verbose : boolean, optional, default: False']","[""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'str'>"", ""<type 'bool'>""]","damping=0.5, max_iter=200, convergence_iter=15, copy=True, preference=None, affinity='euclidean', verbose=False","[('damping', '0.5'), ('max_iter', '200'), ('convergence_iter', '15'), ('copy', 'True'), ('preference', 'None'), ('affinity', ""'euclidean'""), ('verbose', 'False')]",AffinityPropagation,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.AffinityPropagation.html#sklearn.cluster.AffinityPropagation,sklearn.cluster,Clustering
1,"['n_clusters', 'connectivity', 'affinity', 'memory', 'n_components', 'compute_full_tree', 'linkage', 'pooling_func']","['n_clusters : int, default=2', 'connectivity : array-like or callable, optional', ""affinity : string or callable, default: 'euclidean'"", 'memory : Instance of joblib.Memory or string (optional)', 'n_components : int (optional)', ""compute_full_tree : bool or 'auto' (optional)"", ""linkage : {'ward', 'complete', 'average'}, optional, default: 'ward'"", 'pooling_func : callable, default=np.mean']","[""<type 'int'>"", ""(<built-in function callable>, <type 'numpy.ndarray'>)"", '<built-in function callable>', ""(<class 'joblib.memory.Memory'>, <type 'str'>)"", ""<type 'int'>"", ""<type 'bool'>"", None, '<built-in function callable>']","n_clusters=2, affinity='euclidean', memory=Memory(cachedir=None), connectivity=None, n_components=None, compute_full_tree='auto', linkage='ward', pooling_func=<function mean at 0x7f49277337b8>","[('n_clusters', '2'), ('affinity', ""'euclidean'""), ('memory', 'Memory(cachedir=None)'), ('connectivity', 'None'), ('n_components', 'None'), ('compute_full_tree', ""'auto'""), ('linkage', ""'ward'""), ('pooling_func', '<function mean at 0x7f49277337b8>')]",AgglomerativeClustering,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html#sklearn.cluster.AgglomerativeClustering,sklearn.cluster,Clustering
2,"['threshold', 'branching_factor', 'n_clusters', 'compute_labels', 'copy']","['threshold : float, default 0.5', 'branching_factor : int, default 50', 'n_clusters : int, instance of sklearn.cluster model, default None', 'compute_labels : bool, default True', 'copy : bool, default True']","[""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, <class 'sklearn.base.ClusterMixin'>)"", ""<type 'bool'>"", ""<type 'bool'>""]","threshold=0.5, branching_factor=50, n_clusters=3, compute_labels=True, copy=True","[('threshold', '0.5'), ('branching_factor', '50'), ('n_clusters', '3'), ('compute_labels', 'True'), ('copy', 'True')]",Birch,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.Birch.html#sklearn.cluster.Birch,sklearn.cluster,Clustering
3,"['eps', 'min_samples', 'metric', 'algorithm', 'leaf_size', 'random_state: numpy.RandomState, optional']","['eps : float, optional', 'min_samples : int, optional', 'metric : string, or callable', ""algorithm : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"", 'leaf_size : int, optional (default = 30)', 'random_state: numpy.RandomState, optional :']","[""<type 'float'>"", ""<type 'int'>"", '<built-in function callable>', None, ""<type 'int'>"", ""<type 'mtrand.RandomState'>""]","eps=0.5, min_samples=5, metric='euclidean', algorithm='auto', leaf_size=30, p=None, random_state=None","[('eps', '0.5'), ('min_samples', '5'), ('metric', ""'euclidean'""), ('algorithm', ""'auto'""), ('leaf_size', '30'), ('p', 'None'), ('random_state', 'None')]",DBSCAN,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html#sklearn.cluster.DBSCAN,sklearn.cluster,Clustering
4,"['n_clusters', 'connectivity', 'affinity', 'memory', 'n_components', 'compute_full_tree', 'linkage', 'pooling_func']","['n_clusters : int, default 2', 'connectivity : array-like or callable, optional', ""affinity : string or callable, default 'euclidean'"", 'memory : Instance of joblib.Memory or string, optional', 'n_components : int (optional)', ""compute_full_tree : bool or 'auto', optional, default 'auto'"", ""linkage : {'ward', 'complete', 'average'}, optional, default 'ward'"", 'pooling_func : callable, default np.mean']","[""<type 'int'>"", ""(<built-in function callable>, <type 'numpy.ndarray'>)"", '<built-in function callable>', ""(<class 'joblib.memory.Memory'>, <type 'str'>)"", ""<type 'int'>"", ""<type 'bool'>"", None, '<built-in function callable>']","n_clusters=2, affinity='euclidean', memory=Memory(cachedir=None), connectivity=None, n_components=None, compute_full_tree='auto', linkage='ward', pooling_func=<function mean at 0x7f49277337b8>","[('n_clusters', '2'), ('affinity', ""'euclidean'""), ('memory', 'Memory(cachedir=None)'), ('connectivity', 'None'), ('n_components', 'None'), ('compute_full_tree', ""'auto'""), ('linkage', ""'ward'""), ('pooling_func', '<function mean at 0x7f49277337b8>')]",FeatureAgglomeration,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.FeatureAgglomeration.html#sklearn.cluster.FeatureAgglomeration,sklearn.cluster,Clustering
5,"['n_clusters', 'max_iter', 'n_init', 'init', 'precompute_distances', 'tol', 'n_jobs', 'random_state', 'verbose', 'copy_x']","['n_clusters : int, optional, default: 8', 'max_iter : int, default: 300', 'n_init : int, default: 10', ""init : {'k-means++', 'random' or an ndarray}"", ""precompute_distances : {'auto', True, False}"", 'tol : float, default: 1e-4', 'n_jobs : int', 'random_state : integer or numpy.RandomState, optional', 'verbose : int, default 0', 'copy_x : boolean, default True']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", None, ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'bool'>""]","n_clusters=8, init='k-means++', n_init=10, max_iter=300, tol=0.0001, precompute_distances='auto', verbose=0, random_state=None, copy_x=True, n_jobs=1","[('n_clusters', '8'), ('init', ""'k-means++'""), ('n_init', '10'), ('max_iter', '300'), ('tol', '0.0001'), ('precompute_distances', ""'auto'""), ('verbose', '0'), ('random_state', 'None'), ('copy_x', 'True'), ('n_jobs', '1')]",KMeans,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html#sklearn.cluster.KMeans,sklearn.cluster,Clustering
6,"['n_clusters', 'max_iter', 'max_no_improvement', 'tol', 'batch_size', 'init_size', 'init', 'n_init', 'compute_labels', 'random_state', 'reassignment_ratio', 'verbose']","['n_clusters : int, optional, default: 8', 'max_iter : int, optional', 'max_no_improvement : int, default: 10', 'tol : float, default: 0.0', 'batch_size : int, optional, default: 100', 'init_size : int, optional, default: 3 * batch_size', ""init : {'k-means++', 'random' or an ndarray}, default: 'k-means++'"", 'n_init : int, default=3', 'compute_labels : boolean, default=True', 'random_state : integer or numpy.RandomState, optional', 'reassignment_ratio : float, default: 0.01', 'verbose : boolean, optional']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)"", ""<type 'float'>"", ""<type 'bool'>""]","n_clusters=8, init='k-means++', max_iter=100, batch_size=100, verbose=0, compute_labels=True, random_state=None, tol=0.0, max_no_improvement=10, init_size=None, n_init=3, reassignment_ratio=0.01","[('n_clusters', '8'), ('init', ""'k-means++'""), ('max_iter', '100'), ('batch_size', '100'), ('verbose', '0'), ('compute_labels', 'True'), ('random_state', 'None'), ('tol', '0.0'), ('max_no_improvement', '10'), ('init_size', 'None'), ('n_init', '3'), ('reassignment_ratio', '0.01')]",MiniBatchKMeans,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.MiniBatchKMeans.html#sklearn.cluster.MiniBatchKMeans,sklearn.cluster,Clustering
7,"['bandwidth', 'seeds', 'bin_seeding', 'min_bin_freq', 'cluster_all', 'n_jobs']","['bandwidth : float, optional', 'seeds : array, shape=[n_samples, n_features], optional', 'bin_seeding : boolean, optional', 'min_bin_freq : int, optional', 'cluster_all : boolean, default True', 'n_jobs : int']","[""<type 'float'>"", ""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'int'>""]","bandwidth=None, seeds=None, bin_seeding=False, min_bin_freq=1, cluster_all=True, n_jobs=1","[('bandwidth', 'None'), ('seeds', 'None'), ('bin_seeding', 'False'), ('min_bin_freq', '1'), ('cluster_all', 'True'), ('n_jobs', '1')]",MeanShift,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.MeanShift.html#sklearn.cluster.MeanShift,sklearn.cluster,Clustering
8,"['n_clusters', 'affinity', 'gamma', 'degree', 'coef0', 'n_neighbors', 'eigen_solver', 'random_state', 'n_init', 'eigen_tol', 'assign_labels', 'kernel_params']","['n_clusters : integer, optional', ""affinity : string, array-like or callable, default 'rbf'"", 'gamma : float', 'degree : float, default=3', 'coef0 : float, default=1', 'n_neighbors : integer', ""eigen_solver : {None, 'arpack', 'lobpcg', or 'amg'}"", 'random_state : int seed, RandomState instance, or None (default)', 'n_init : int, optional, default: 10', 'eigen_tol : float, optional, default: 0.0', ""assign_labels : {'kmeans', 'discretize'}, default: 'kmeans'"", 'kernel_params : dictionary of string to any, optional']","[""<type 'int'>"", ""(<built-in function callable>, <type 'numpy.ndarray'>)"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", None, ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'float'>"", None, ""<type 'dict'>""]","n_clusters=8, eigen_solver=None, random_state=None, n_init=10, gamma=1.0, affinity='rbf', n_neighbors=10, eigen_tol=0.0, assign_labels='kmeans', degree=3, coef0=1, kernel_params=None","[('n_clusters', '8'), ('eigen_solver', 'None'), ('random_state', 'None'), ('n_init', '10'), ('gamma', '1.0'), ('affinity', ""'rbf'""), ('n_neighbors', '10'), ('eigen_tol', '0.0'), ('assign_labels', ""'kmeans'""), ('degree', '3'), ('coef0', '1'), ('kernel_params', 'None')]",SpectralClustering,http://scikit-learn.org/stable/modules/generated/sklearn.cluster.SpectralClustering.html#sklearn.cluster.SpectralClustering,sklearn.cluster,Clustering
9,"['store_precision', 'assume_centered']","['store_precision : bool', 'assume_centered : bool']","[""<type 'bool'>"", ""<type 'bool'>""]","store_precision=True, assume_centered=False","[('store_precision', 'True'), ('assume_centered', 'False')]",EmpiricalCovariance,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.EmpiricalCovariance.html#sklearn.covariance.EmpiricalCovariance,sklearn.covariance,Covariance Estimators
10,"['store_precision', 'assume_centered', 'support_fraction', 'contamination']","['store_precision : bool', 'assume_centered : Boolean', 'support_fraction : float, 0 < support_fraction < 1', 'contamination : float, 0. < contamination < 0.5']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'float'>""]","store_precision=True, assume_centered=False, support_fraction=None, contamination=0.1, random_state=None","[('store_precision', 'True'), ('assume_centered', 'False'), ('support_fraction', 'None'), ('contamination', '0.1'), ('random_state', 'None')]",EllipticEnvelope,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.EllipticEnvelope.html#sklearn.covariance.EllipticEnvelope,sklearn.covariance,Covariance Estimators
11,"['alpha', 'mode', 'tol', 'enet_tol', 'max_iter', 'verbose', 'assume_centered']","['alpha : positive float, default 0.01', ""mode : {'cd', 'lars'}, default 'cd'"", 'tol : positive float, default 1e-4', 'enet_tol : positive float, optional', 'max_iter : integer, default 100', 'verbose : boolean, default False', 'assume_centered : boolean, default False']","[""<type 'float'>"", None, ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'bool'>""]","alpha=0.01, mode='cd', tol=0.0001, enet_tol=0.0001, max_iter=100, verbose=False, assume_centered=False","[('alpha', '0.01'), ('mode', ""'cd'""), ('tol', '0.0001'), ('enet_tol', '0.0001'), ('max_iter', '100'), ('verbose', 'False'), ('assume_centered', 'False')]",GraphLasso,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.GraphLasso.html#sklearn.covariance.GraphLasso,sklearn.covariance,Covariance Estimators
12,"['alphas', 'n_refinements: strictly positive integer', 'cv', 'tol: positive float, optional', 'enet_tol', 'max_iter: integer, optional', ""mode: {'cd', 'lars'}"", 'n_jobs: int, optional', 'verbose: boolean, optional', 'assume_centered']","['alphas : integer, or list positive float, optional', 'n_refinements: strictly positive integer :', 'cv : int, cross-validation generator or an iterable, optional', 'tol: positive float, optional :', 'enet_tol : positive float, optional', 'max_iter: integer, optional :', ""mode: {'cd', 'lars'} :"", 'n_jobs: int, optional :', 'verbose: boolean, optional :', 'assume_centered : Boolean']","[""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", None, ""<type 'int'>"", ""<type 'bool'>"", ""<type 'bool'>""]","alphas=4, n_refinements=4, cv=None, tol=0.0001, enet_tol=0.0001, max_iter=100, mode='cd', n_jobs=1, verbose=False, assume_centered=False","[('alphas', '4'), ('n_refinements', '4'), ('cv', 'None'), ('tol', '0.0001'), ('enet_tol', '0.0001'), ('max_iter', '100'), ('mode', ""'cd'""), ('n_jobs', '1'), ('verbose', 'False'), ('assume_centered', 'False')]",GraphLassoCV,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.GraphLassoCV.html#sklearn.covariance.GraphLassoCV,sklearn.covariance,Covariance Estimators
13,"['store_precision', 'assume_centered', 'block_size']","['store_precision : bool, default=True', 'assume_centered : bool, default=False', 'block_size : int, default=1000']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>""]","store_precision=True, assume_centered=False, block_size=1000","[('store_precision', 'True'), ('assume_centered', 'False'), ('block_size', '1000')]",LedoitWolf,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.LedoitWolf.html#sklearn.covariance.LedoitWolf,sklearn.covariance,Covariance Estimators
14,"['store_precision', 'assume_centered', 'support_fraction', 'random_state']","['store_precision : bool', 'assume_centered : Boolean', 'support_fraction : float, 0 < support_fraction < 1', 'random_state : integer or numpy.RandomState, optional']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'float'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","store_precision=True, assume_centered=False, support_fraction=None, random_state=None","[('store_precision', 'True'), ('assume_centered', 'False'), ('support_fraction', 'None'), ('random_state', 'None')]",MinCovDet,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.MinCovDet.html#sklearn.covariance.MinCovDet,sklearn.covariance,Covariance Estimators
15,"['store_precision', 'assume_centered: bool, default=False']","['store_precision : bool, default=True', 'assume_centered: bool, default=False :']","[""<type 'bool'>"", ""<type 'bool'>""]","store_precision=True, assume_centered=False","[('store_precision', 'True'), ('assume_centered', 'False')]",OAS,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.OAS.html#sklearn.covariance.OAS,sklearn.covariance,Covariance Estimators
16,"['store_precision', 'shrinkage', 'assume_centered']","['store_precision : boolean, default True', 'shrinkage : float, 0 <= shrinkage <= 1, default 0.1', 'assume_centered : boolean, default False']","[""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>""]","store_precision=True, assume_centered=False, shrinkage=0.1","[('store_precision', 'True'), ('assume_centered', 'False'), ('shrinkage', '0.1')]",ShrunkCovariance,http://scikit-learn.org/stable/modules/generated/sklearn.covariance.ShrunkCovariance.html#sklearn.covariance.ShrunkCovariance,sklearn.covariance,Covariance Estimators
17,"['n', 'n_folds', 'shuffle', 'random_state']","['n : int', 'n_folds : int, default=3', 'shuffle : boolean, optional', 'random_state : None, int or RandomState']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n=None, n_folds=3, shuffle=False, random_state=None","[('n', None), ('n_folds', '3'), ('shuffle', 'False'), ('random_state', 'None')]",KFold,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.KFold.html#sklearn.cross_validation.KFold,sklearn.cross_validation,Cross Validation
18,"['labels', 'n_folds']","['labels : array-like with shape (n_samples, )', 'n_folds : int, default=3']","[""<type 'numpy.ndarray'>"", ""<type 'int'>""]","labels=None, n_folds=3","[('labels', None), ('n_folds', '3')]",LabelKFold,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.LabelKFold.html#sklearn.cross_validation.LabelKFold,sklearn.cross_validation,Cross Validation
19,"['labels', 'n_iter', 'test_size', 'train_size', 'random_state']","['labels :  array, [n_samples]', 'n_iter : int (default 5)', 'test_size : float (default 0.2), int, or None', 'train_size : float, int, or None (default is None)', 'random_state : int or RandomState']","[""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'float'>, <type 'int'>, None)"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","labels=None, n_iter=5, test_size=0.2, train_size=None, random_state=None","[('labels', None), ('n_iter', '5'), ('test_size', '0.2'), ('train_size', 'None'), ('random_state', 'None')]",LabelShuffleSplit,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.LabelShuffleSplit.html#sklearn.cross_validation.LabelShuffleSplit,sklearn.cross_validation,Cross Validation
20,['labels'],"['labels : array-like of int with shape (n_samples,)']","[""<type 'numpy.ndarray'>""]",labels=None,"[('labels', None)]",LeaveOneLabelOut,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.LeaveOneLabelOut.html#sklearn.cross_validation.LeaveOneLabelOut,sklearn.cross_validation,Cross Validation
21,['n'],['n : int'],"[""<type 'int'>""]",n=None,"[('n', None)]",LeaveOneOut,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.LeaveOneOut.html#sklearn.cross_validation.LeaveOneOut,sklearn.cross_validation,Cross Validation
22,"['labels', 'p']","['labels : array-like of int with shape (n_samples,)', 'p : int']","[""<type 'numpy.ndarray'>"", ""<type 'int'>""]","labels=None, p=None","[('labels', None), ('p', None)]",LeavePLabelOut,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.LeavePLabelOut.html#sklearn.cross_validation.LeavePLabelOut,sklearn.cross_validation,Cross Validation
23,"['n', 'p']","['n : int', 'p : int']","[""<type 'int'>"", ""<type 'int'>""]","n=None, p=None","[('n', None), ('p', None)]",LeavePOut,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.LeavePOut.html#sklearn.cross_validation.LeavePOut,sklearn.cross_validation,Cross Validation
24,['test_fold'],"[""test_fold : 'array-like, shape (n_samples,)""]","[""<type 'numpy.ndarray'>""]",test_fold=None,"[('test_fold', None)]",PredefinedSplit,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.PredefinedSplit.html#sklearn.cross_validation.PredefinedSplit,sklearn.cross_validation,Cross Validation
25,"['n', 'n_iter', 'test_size', 'train_size', 'random_state']","['n : int', 'n_iter : int (default 10)', 'test_size : float (default 0.1), int, or None', 'train_size : float, int, or None (default is None)', 'random_state : int or RandomState']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'float'>, <type 'int'>, None)"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n=None, n_iter=10, test_size=0.1, train_size=None, random_state=None","[('n', None), ('n_iter', '10'), ('test_size', '0.1'), ('train_size', 'None'), ('random_state', 'None')]",ShuffleSplit,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.ShuffleSplit.html#sklearn.cross_validation.ShuffleSplit,sklearn.cross_validation,Cross Validation
26,"['y', 'n_folds', 'shuffle', 'random_state']","['y : array-like, [n_samples]', 'n_folds : int, default=3', 'shuffle : boolean, optional', 'random_state : None, int or RandomState']","[""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","y=None, n_folds=3, shuffle=False, random_state=None","[('y', None), ('n_folds', '3'), ('shuffle', 'False'), ('random_state', 'None')]",StratifiedKFold,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.StratifiedKFold.html#sklearn.cross_validation.StratifiedKFold,sklearn.cross_validation,Cross Validation
27,"['y', 'n_iter', 'test_size', 'train_size', 'random_state']","['y : array, [n_samples]', 'n_iter : int (default 10)', 'test_size : float (default 0.1), int, or None', 'train_size : float, int, or None (default is None)', 'random_state : int or RandomState']","[""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'float'>, <type 'int'>, None)"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","y=None, n_iter=10, test_size=0.1, train_size=None, random_state=None","[('y', None), ('n_iter', '10'), ('test_size', '0.1'), ('train_size', 'None'), ('random_state', 'None')]",StratifiedShuffleSplit,http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.StratifiedShuffleSplit.html#sklearn.cross_validation.StratifiedShuffleSplit,sklearn.cross_validation,Cross Validation
28,"['n_components', 'copy', 'whiten']","['n_components : int, None or string', 'copy : bool', 'whiten : bool, optional']","[""(<type 'int'>, None, <type 'str'>)"", ""<type 'bool'>"", ""<type 'bool'>""]","n_components=None, copy=True, whiten=False","[('n_components', 'None'), ('copy', 'True'), ('whiten', 'False')]",PCA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html#sklearn.decomposition.PCA,sklearn.decomposition,Matrix Decomposition
29,"['n_components', 'batch_size', 'copy', 'whiten']","['n_components : int or None, (default=None)', 'batch_size : int or None, (default=None)', 'copy : bool, (default=True)', 'whiten : bool, optional']","[""(<type 'int'>, None)"", ""(<type 'int'>, None)"", ""<type 'bool'>"", ""<type 'bool'>""]","n_components=None, whiten=False, copy=True, batch_size=None","[('n_components', 'None'), ('whiten', 'False'), ('copy', 'True'), ('batch_size', 'None')]",IncrementalPCA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.IncrementalPCA.html#sklearn.decomposition.IncrementalPCA,sklearn.decomposition,Matrix Decomposition
30,"['n_components', 'init', 'solver', 'tol', 'max_iter', 'random_state', 'alpha', 'l1_ratio', 'shuffle', 'nls_max_iter', 'sparseness', 'beta', 'eta']","['n_components : int or None', ""init :  'random' | 'nndsvd' |  'nndsvda' | 'nndsvdar' | 'custom'"", ""solver : 'pg' | 'cd'"", 'tol : double, default: 1e-4', 'max_iter : integer, default: 200', 'random_state : integer seed, RandomState instance, or None (default)', 'alpha : double, default: 0.', 'l1_ratio : double, default: 0.', 'shuffle : boolean, default: False', 'nls_max_iter : integer, default: 2000', ""sparseness : 'data' | 'components' | None, default: None"", 'beta : double, default: 1', 'eta : double, default: 0.1']","[""(<type 'int'>, None)"", None, None, ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", None, ""<type 'float'>"", ""<type 'float'>""]","*args=None, **kwargs=None","[('*args', None), ('**kwargs', None)]",ProjectedGradientNMF,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.ProjectedGradientNMF.html#sklearn.decomposition.ProjectedGradientNMF,sklearn.decomposition,Matrix Decomposition
31,"['n_components', 'copy', 'iterated_power', 'whiten', 'random_state']","['n_components : int, optional', 'copy : bool', 'iterated_power : int, optional', 'whiten : bool, optional', 'random_state : int or RandomState instance or None (default)']","[""<type 'int'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","n_components=None, copy=True, iterated_power=3, whiten=False, random_state=None","[('n_components', 'None'), ('copy', 'True'), ('iterated_power', '3'), ('whiten', 'False'), ('random_state', 'None')]",RandomizedPCA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.RandomizedPCA.html#sklearn.decomposition.RandomizedPCA,sklearn.decomposition,Matrix Decomposition
32,"['n_components: int or None', ""kernel: 'linear' | 'poly' | 'rbf' | 'sigmoid' | 'cosine' | 'precomputed'"", 'degree', 'gamma', 'coef0', 'kernel_params', 'alpha: int', 'fit_inverse_transform: bool', ""eigen_solver: string ['auto'|'dense'|'arpack']"", 'tol: float', 'max_iter', 'remove_zero_eig']","['n_components: int or None :', ""kernel: 'linear' | 'poly' | 'rbf' | 'sigmoid' | 'cosine' | 'precomputed' :"", 'degree : int, default=3', 'gamma : float, optional', 'coef0 : float, optional', 'kernel_params : mapping of string to any, optional', 'alpha: int :', 'fit_inverse_transform: bool :', ""eigen_solver: string ['auto'|'dense'|'arpack'] :"", 'tol: float :', 'max_iter : int', 'remove_zero_eig : boolean, default=True']","[""(<type 'int'>, None)"", None, ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'bool'>""]","n_components=None, kernel='linear', gamma=None, degree=3, coef0=1, kernel_params=None, alpha=1.0, fit_inverse_transform=False, eigen_solver='auto', tol=0, max_iter=None, remove_zero_eig=False","[('n_components', 'None'), ('kernel', ""'linear'""), ('gamma', 'None'), ('degree', '3'), ('coef0', '1'), ('kernel_params', 'None'), ('alpha', '1.0'), ('fit_inverse_transform', 'False'), ('eigen_solver', ""'auto'""), ('tol', '0'), ('max_iter', 'None'), ('remove_zero_eig', 'False')]",KernelPCA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html#sklearn.decomposition.KernelPCA,sklearn.decomposition,Matrix Decomposition
33,"['n_components', 'tol', 'copy', 'max_iter', 'noise_variance_init', 'svd_method', 'iterated_power', 'random_state']","['n_components : int | None', 'tol : float', 'copy : bool', 'max_iter : int', 'noise_variance_init : None | array, shape=(n_features,)', ""svd_method : {'lapack', 'randomized'}"", 'iterated_power : int, optional', 'random_state : int or RandomState']","[""(<type 'int'>, None)"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", None, ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=None, tol=0.01, copy=True, max_iter=1000, noise_variance_init=None, svd_method='randomized', iterated_power=3, random_state=0","[('n_components', 'None'), ('tol', '0.01'), ('copy', 'True'), ('max_iter', '1000'), ('noise_variance_init', 'None'), ('svd_method', ""'randomized'""), ('iterated_power', '3'), ('random_state', '0')]",FactorAnalysis,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.FactorAnalysis.html#sklearn.decomposition.FactorAnalysis,sklearn.decomposition,Matrix Decomposition
34,"['n_components', 'algorithm', 'whiten', 'fun', 'fun_args', 'max_iter', 'tol', 'w_init', 'random_state']","['n_components : int, optional', ""algorithm : {'parallel', 'deflation'}"", 'whiten : boolean, optional', ""fun : string or function, optional. Default: 'logcosh'"", 'fun_args : dictionary, optional', 'max_iter : int, optional', 'tol : float, optional', 'w_init : None of an (n_components, n_components) ndarray', 'random_state : int or RandomState']","[""<type 'int'>"", None, ""<type 'bool'>"", ""<type 'str'>"", ""<type 'dict'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'numpy.ndarray'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=None, algorithm='parallel', whiten=True, fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, random_state=None","[('n_components', 'None'), ('algorithm', ""'parallel'""), ('whiten', 'True'), ('fun', ""'logcosh'""), ('fun_args', 'None'), ('max_iter', '200'), ('tol', '0.0001'), ('w_init', 'None'), ('random_state', 'None')]",FastICA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.FastICA.html#sklearn.decomposition.FastICA,sklearn.decomposition,Matrix Decomposition
35,"['n_components', 'algorithm', 'n_iter', 'random_state', 'tol']","['n_components : int, default = 2', ""algorithm : string, default = 'randomized'"", 'n_iter : int, optional', 'random_state : int or RandomState, optional', 'tol : float, optional']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)"", ""<type 'float'>""]","n_components=2, algorithm='randomized', n_iter=5, random_state=None, tol=0.0","[('n_components', '2'), ('algorithm', ""'randomized'""), ('n_iter', '5'), ('random_state', 'None'), ('tol', '0.0')]",TruncatedSVD,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.TruncatedSVD.html#sklearn.decomposition.TruncatedSVD,sklearn.decomposition,Matrix Decomposition
36,"['n_components', 'init', 'solver', 'tol', 'max_iter', 'random_state', 'alpha', 'l1_ratio', 'shuffle', 'nls_max_iter', 'sparseness', 'beta', 'eta']","['n_components : int or None', ""init :  'random' | 'nndsvd' |  'nndsvda' | 'nndsvdar' | 'custom'"", ""solver : 'pg' | 'cd'"", 'tol : double, default: 1e-4', 'max_iter : integer, default: 200', 'random_state : integer seed, RandomState instance, or None (default)', 'alpha : double, default: 0.', 'l1_ratio : double, default: 0.', 'shuffle : boolean, default: False', 'nls_max_iter : integer, default: 2000', ""sparseness : 'data' | 'components' | None, default: None"", 'beta : double, default: 1', 'eta : double, default: 0.1']","[""(<type 'int'>, None)"", None, None, ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", None, ""<type 'float'>"", ""<type 'float'>""]","n_components=None, init=None, solver='cd', tol=0.0001, max_iter=200, random_state=None, alpha=0.0, l1_ratio=0.0, verbose=0, shuffle=False, nls_max_iter=2000, sparseness=None, beta=1, eta=0.1","[('n_components', 'None'), ('init', 'None'), ('solver', ""'cd'""), ('tol', '0.0001'), ('max_iter', '200'), ('random_state', 'None'), ('alpha', '0.0'), ('l1_ratio', '0.0'), ('verbose', '0'), ('shuffle', 'False'), ('nls_max_iter', '2000'), ('sparseness', 'None'), ('beta', '1'), ('eta', '0.1')]",NMF,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.NMF.html#sklearn.decomposition.NMF,sklearn.decomposition,Matrix Decomposition
37,"['n_components', 'alpha', 'ridge_alpha', 'max_iter', 'tol', 'method', 'n_jobs', 'U_init', 'V_init', 'verbose :', 'random_state']","['n_components : int,', 'alpha : float,', 'ridge_alpha : float,', 'max_iter : int,', 'tol : float,', ""method : {'lars', 'cd'}"", 'n_jobs : int,', 'U_init : array of shape (n_samples, n_components),', 'V_init : array of shape (n_components, n_features),', 'verbose : :', 'random_state : int or RandomState']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", None, ""<type 'int'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", None, ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=None, alpha=1, ridge_alpha=0.01, max_iter=1000, tol=1e-08, method='lars', n_jobs=1, U_init=None, V_init=None, verbose=False, random_state=None","[('n_components', 'None'), ('alpha', '1'), ('ridge_alpha', '0.01'), ('max_iter', '1000'), ('tol', '1e-08'), ('method', ""'lars'""), ('n_jobs', '1'), ('U_init', 'None'), ('V_init', 'None'), ('verbose', 'False'), ('random_state', 'None')]",SparsePCA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.SparsePCA.html#sklearn.decomposition.SparsePCA,sklearn.decomposition,Matrix Decomposition
38,"['n_components', 'alpha', 'ridge_alpha', 'n_iter', 'callback', 'batch_size', 'verbose :', 'shuffle', 'n_jobs', 'method', 'random_state']","['n_components : int,', 'alpha : int,', 'ridge_alpha : float,', 'n_iter : int,', 'callback : callable,', 'batch_size : int,', 'verbose : :', 'shuffle : boolean,', 'n_jobs : int,', ""method : {'lars', 'cd'}"", 'random_state : int or RandomState']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", '<built-in function callable>', ""<type 'int'>"", None, ""<type 'bool'>"", ""<type 'int'>"", None, ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=None, alpha=1, ridge_alpha=0.01, n_iter=100, callback=None, batch_size=3, verbose=False, shuffle=True, n_jobs=1, method='lars', random_state=None","[('n_components', 'None'), ('alpha', '1'), ('ridge_alpha', '0.01'), ('n_iter', '100'), ('callback', 'None'), ('batch_size', '3'), ('verbose', 'False'), ('shuffle', 'True'), ('n_jobs', '1'), ('method', ""'lars'""), ('random_state', 'None')]",MiniBatchSparsePCA,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.MiniBatchSparsePCA.html#sklearn.decomposition.MiniBatchSparsePCA,sklearn.decomposition,Matrix Decomposition
39,"['dictionary', 'transform_algorithm', 'transform_n_nonzero_coefs', 'transform_alpha', 'split_sign', 'n_jobs']","['dictionary : array, [n_components, n_features]', ""transform_algorithm : {'lasso_lars', 'lasso_cd', 'lars', 'omp',     'threshold'}"", 'transform_n_nonzero_coefs : int, 0.1 * n_features by default', 'transform_alpha : float, 1. by default', 'split_sign : bool, False by default', 'n_jobs : int,']","[""<type 'numpy.ndarray'>"", None, ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>""]","dictionary=None, transform_algorithm='omp', transform_n_nonzero_coefs=None, transform_alpha=None, split_sign=False, n_jobs=1","[('dictionary', None), ('transform_algorithm', ""'omp'""), ('transform_n_nonzero_coefs', 'None'), ('transform_alpha', 'None'), ('split_sign', 'False'), ('n_jobs', '1')]",SparseCoder,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.SparseCoder.html#sklearn.decomposition.SparseCoder,sklearn.decomposition,Matrix Decomposition
40,"['n_components', 'alpha', 'max_iter', 'tol', 'fit_algorithm', 'transform_algorithm', 'transform_n_nonzero_coefs', 'transform_alpha', 'split_sign', 'n_jobs', 'code_init', 'dict_init', 'verbose :', 'random_state']","['n_components : int,', 'alpha : float,', 'max_iter : int,', 'tol : float,', ""fit_algorithm : {'lars', 'cd'}"", ""transform_algorithm : {'lasso_lars', 'lasso_cd', 'lars', 'omp',     'threshold'}"", 'transform_n_nonzero_coefs : int, 0.1 * n_features by default', 'transform_alpha : float, 1. by default', 'split_sign : bool, False by default', 'n_jobs : int,', 'code_init : array of shape (n_samples, n_components),', 'dict_init : array of shape (n_components, n_features),', 'verbose : :', 'random_state : int or RandomState']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", None, None, ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", None, ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=None, alpha=1, max_iter=1000, tol=1e-08, fit_algorithm='lars', transform_algorithm='omp', transform_n_nonzero_coefs=None, transform_alpha=None, n_jobs=1, code_init=None, dict_init=None, verbose=False, split_sign=False, random_state=None","[('n_components', 'None'), ('alpha', '1'), ('max_iter', '1000'), ('tol', '1e-08'), ('fit_algorithm', ""'lars'""), ('transform_algorithm', ""'omp'""), ('transform_n_nonzero_coefs', 'None'), ('transform_alpha', 'None'), ('n_jobs', '1'), ('code_init', 'None'), ('dict_init', 'None'), ('verbose', 'False'), ('split_sign', 'False'), ('random_state', 'None')]",DictionaryLearning,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.DictionaryLearning.html#sklearn.decomposition.DictionaryLearning,sklearn.decomposition,Matrix Decomposition
41,"['n_components', 'alpha', 'n_iter', 'fit_algorithm', 'transform_algorithm', 'transform_n_nonzero_coefs', 'transform_alpha', 'split_sign', 'n_jobs', 'dict_init', 'verbose :', 'batch_size', 'shuffle', 'random_state']","['n_components : int,', 'alpha : float,', 'n_iter : int,', ""fit_algorithm : {'lars', 'cd'}"", ""transform_algorithm : {'lasso_lars', 'lasso_cd', 'lars', 'omp',     'threshold'}"", 'transform_n_nonzero_coefs : int, 0.1 * n_features by default', 'transform_alpha : float, 1. by default', 'split_sign : bool, False by default', 'n_jobs : int,', 'dict_init : array of shape (n_components, n_features),', 'verbose : :', 'batch_size : int,', 'shuffle : bool,', 'random_state : int or RandomState']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", None, None, ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", None, ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=None, alpha=1, n_iter=1000, fit_algorithm='lars', n_jobs=1, batch_size=3, shuffle=True, dict_init=None, transform_algorithm='omp', transform_n_nonzero_coefs=None, transform_alpha=None, verbose=False, split_sign=False, random_state=None","[('n_components', 'None'), ('alpha', '1'), ('n_iter', '1000'), ('fit_algorithm', ""'lars'""), ('n_jobs', '1'), ('batch_size', '3'), ('shuffle', 'True'), ('dict_init', 'None'), ('transform_algorithm', ""'omp'""), ('transform_n_nonzero_coefs', 'None'), ('transform_alpha', 'None'), ('verbose', 'False'), ('split_sign', 'False'), ('random_state', 'None')]",MiniBatchDictionaryLearning,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.MiniBatchDictionaryLearning.html#sklearn.decomposition.MiniBatchDictionaryLearning,sklearn.decomposition,Matrix Decomposition
42,"['n_topics', 'doc_topic_prior', 'topic_word_prior', 'learning_method', 'learning_decay', 'learning_offset', 'max_iter', 'total_samples', 'batch_size', 'evaluate_every', 'perp_tol', 'mean_change_tol', 'max_doc_update_iter', 'n_jobs', 'verbose', 'random_state']","['n_topics : int, optional (default=10)', 'doc_topic_prior : float, optional (default=None)', 'topic_word_prior : float, optional (default=None)', ""learning_method : 'batch' | 'online', default='online'"", 'learning_decay : float, optional (default=0.7)', 'learning_offset : float, optional (default=10.)', 'max_iter : integer, optional (default=10)', 'total_samples : int, optional (default=1e6)', 'batch_size : int, optional (default=128)', 'evaluate_every : int optional (default=0)', 'perp_tol : float, optional (default=1e-1)', 'mean_change_tol : float, optional (default=1e-3)', 'max_doc_update_iter : int (default=100)', 'n_jobs : int, optional (default=1)', 'verbose : int, optional (default=0)', 'random_state : int or RandomState instance or None, optional (default=None)']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", None, ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","n_topics=10, doc_topic_prior=None, topic_word_prior=None, learning_method='online', learning_decay=0.7, learning_offset=10.0, max_iter=10, batch_size=128, evaluate_every=-1, total_samples=1000000.0, perp_tol=0.1, mean_change_tol=0.001, max_doc_update_iter=100, n_jobs=1, verbose=0, random_state=None","[('n_topics', '10'), ('doc_topic_prior', 'None'), ('topic_word_prior', 'None'), ('learning_method', ""'online'""), ('learning_decay', '0.7'), ('learning_offset', '10.0'), ('max_iter', '10'), ('batch_size', '128'), ('evaluate_every', '-1'), ('total_samples', '1000000.0'), ('perp_tol', '0.1'), ('mean_change_tol', '0.001'), ('max_doc_update_iter', '100'), ('n_jobs', '1'), ('verbose', '0'), ('random_state', 'None')]",LatentDirichletAllocation,http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.LatentDirichletAllocation.html#sklearn.decomposition.LatentDirichletAllocation,sklearn.decomposition,Matrix Decomposition
43,"['strategy', 'random_state', 'constant']","['strategy : str', 'random_state : int seed, RandomState instance, or None (default)', 'constant : int or str or array of shape = [n_outputs]']","[""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'numpy.ndarray'>""]","strategy='stratified', random_state=None, constant=None","[('strategy', ""'stratified'""), ('random_state', 'None'), ('constant', 'None')]",DummyClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.dummy.DummyClassifier.html#sklearn.dummy.DummyClassifier,sklearn.dummy,Dummy estimators
44,"['strategy', 'constant', 'quantile']","['strategy : str', 'constant : int or float or array of shape = [n_outputs]', 'quantile : float in [0.0, 1.0]']","[""<type 'str'>"", ""<type 'numpy.ndarray'>"", ""<type 'float'>""]","strategy='mean', constant=None, quantile=None","[('strategy', ""'mean'""), ('constant', 'None'), ('quantile', 'None')]",DummyRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.dummy.DummyRegressor.html#sklearn.dummy.DummyRegressor,sklearn.dummy,Dummy estimators
45,"['base_estimator', 'n_estimators', 'learning_rate', 'algorithm', 'random_state']","['base_estimator : object, optional (default=DecisionTreeClassifier)', 'n_estimators : integer, optional (default=50)', 'learning_rate : float, optional (default=1.)', ""algorithm : {'SAMME', 'SAMME.R'}, optional (default='SAMME.R')"", 'random_state : int, RandomState instance or None, optional (default=None)']","[""<type 'object'>"", ""<type 'int'>"", ""<type 'float'>"", None, ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","base_estimator=None, n_estimators=50, learning_rate=1.0, algorithm='SAMME.R', random_state=None","[('base_estimator', 'None'), ('n_estimators', '50'), ('learning_rate', '1.0'), ('algorithm', ""'SAMME.R'""), ('random_state', 'None')]",AdaBoostClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html#sklearn.ensemble.AdaBoostClassifier,sklearn.ensemble,Ensemble Methods
46,"['base_estimator', 'n_estimators', 'learning_rate', 'loss', 'random_state']","['base_estimator : object, optional (default=DecisionTreeRegressor)', 'n_estimators : integer, optional (default=50)', 'learning_rate : float, optional (default=1.)', ""loss : {'linear', 'square', 'exponential'}, optional (default='linear')"", 'random_state : int, RandomState instance or None, optional (default=None)']","[""<type 'object'>"", ""<type 'int'>"", ""<type 'float'>"", None, ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","base_estimator=None, n_estimators=50, learning_rate=1.0, loss='linear', random_state=None","[('base_estimator', 'None'), ('n_estimators', '50'), ('learning_rate', '1.0'), ('loss', ""'linear'""), ('random_state', 'None')]",AdaBoostRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostRegressor.html#sklearn.ensemble.AdaBoostRegressor,sklearn.ensemble,Ensemble Methods
47,"['base_estimator', 'n_estimators', 'max_samples', 'max_features', 'bootstrap', 'bootstrap_features', 'oob_score', 'warm_start', 'n_jobs', 'random_state', 'verbose']","['base_estimator : object or None, optional (default=None)', 'n_estimators : int, optional (default=10)', 'max_samples : int or float, optional (default=1.0)', 'max_features : int or float, optional (default=1.0)', 'bootstrap : boolean, optional (default=True)', 'bootstrap_features : boolean, optional (default=False)', 'oob_score : bool', 'warm_start : bool, optional (default=False)', 'n_jobs : int, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)']","[""(None, <type 'object'>)"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>""]","base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, n_jobs=1, random_state=None, verbose=0","[('base_estimator', 'None'), ('n_estimators', '10'), ('max_samples', '1.0'), ('max_features', '1.0'), ('bootstrap', 'True'), ('bootstrap_features', 'False'), ('oob_score', 'False'), ('warm_start', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0')]",BaggingClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.BaggingClassifier.html#sklearn.ensemble.BaggingClassifier,sklearn.ensemble,Ensemble Methods
48,"['base_estimator', 'n_estimators', 'max_samples', 'max_features', 'bootstrap', 'bootstrap_features', 'oob_score', 'warm_start', 'n_jobs', 'random_state', 'verbose']","['base_estimator : object or None, optional (default=None)', 'n_estimators : int, optional (default=10)', 'max_samples : int or float, optional (default=1.0)', 'max_features : int or float, optional (default=1.0)', 'bootstrap : boolean, optional (default=True)', 'bootstrap_features : boolean, optional (default=False)', 'oob_score : bool', 'warm_start : bool, optional (default=False)', 'n_jobs : int, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)']","[""(None, <type 'object'>)"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>""]","base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, n_jobs=1, random_state=None, verbose=0","[('base_estimator', 'None'), ('n_estimators', '10'), ('max_samples', '1.0'), ('max_features', '1.0'), ('bootstrap', 'True'), ('bootstrap_features', 'False'), ('oob_score', 'False'), ('warm_start', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0')]",BaggingRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.BaggingRegressor.html#sklearn.ensemble.BaggingRegressor,sklearn.ensemble,Ensemble Methods
49,"['n_estimators', 'criterion', 'max_features', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'bootstrap', 'oob_score', 'n_jobs', 'random_state', 'verbose', 'warm_start', 'class_weight']","['n_estimators : integer, optional (default=10)', ""criterion : string, optional (default='gini')"", ""max_features : int, float, string or None, optional (default='auto')"", 'max_depth : integer or None, optional (default=None)', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', 'bootstrap : boolean, optional (default=False)', 'oob_score : bool', 'n_jobs : integer, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)', 'warm_start : bool, optional (default=False)', ""class_weight : dict, list of dicts, 'balanced', 'balanced_subsample' or None, optional""]","[""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'dict'>""]","n_estimators=10, criterion='gini', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=False, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False, class_weight=None","[('n_estimators', '10'), ('criterion', ""'gini'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', ""'auto'""), ('max_leaf_nodes', 'None'), ('bootstrap', 'False'), ('oob_score', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0'), ('warm_start', 'False'), ('class_weight', 'None')]",ExtraTreesClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesClassifier.html#sklearn.ensemble.ExtraTreesClassifier,sklearn.ensemble,Ensemble Methods
50,"['n_estimators', 'criterion', 'max_features', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'bootstrap', 'oob_score', 'n_jobs', 'random_state', 'verbose', 'warm_start']","['n_estimators : integer, optional (default=10)', ""criterion : string, optional (default='mse')"", ""max_features : int, float, string or None, optional (default='auto')"", 'max_depth : integer or None, optional (default=None)', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', 'bootstrap : boolean, optional (default=False)', 'oob_score : bool', 'n_jobs : integer, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)', 'warm_start : bool, optional (default=False)']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'bool'>""]","n_estimators=10, criterion='mse', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=False, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False","[('n_estimators', '10'), ('criterion', ""'mse'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', ""'auto'""), ('max_leaf_nodes', 'None'), ('bootstrap', 'False'), ('oob_score', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0'), ('warm_start', 'False')]",ExtraTreesRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesRegressor.html#sklearn.ensemble.ExtraTreesRegressor,sklearn.ensemble,Ensemble Methods
51,"['loss', 'learning_rate', 'n_estimators', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'subsample', 'max_features', 'max_leaf_nodes', 'init', 'verbose', 'warm_start', 'random_state', 'presort']","[""loss : {'deviance', 'exponential'}, optional (default='deviance')"", 'learning_rate : float, optional (default=0.1)', 'n_estimators : int (default=100)', 'max_depth : integer, optional (default=3)', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'subsample : float, optional (default=1.0)', 'max_features : int, float, string or None, optional (default=None)', 'max_leaf_nodes : int or None, optional (default=None)', 'init : BaseEstimator, None, optional (default=None)', 'verbose : int, default: 0', 'warm_start : bool, default: False', 'random_state : int, RandomState instance or None, optional (default=None)', ""presort : bool or 'auto', optional (default='auto')""]","[None, ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<class 'sklearn.base.BaseEstimator'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'bool'>""]","loss='deviance', learning_rate=0.1, n_estimators=100, subsample=1.0, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, init=None, random_state=None, max_features=None, verbose=0, max_leaf_nodes=None, warm_start=False, presort='auto'","[('loss', ""'deviance'""), ('learning_rate', '0.1'), ('n_estimators', '100'), ('subsample', '1.0'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_depth', '3'), ('init', 'None'), ('random_state', 'None'), ('max_features', 'None'), ('verbose', '0'), ('max_leaf_nodes', 'None'), ('warm_start', 'False'), ('presort', ""'auto'"")]",GradientBoostingClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html#sklearn.ensemble.GradientBoostingClassifier,sklearn.ensemble,Ensemble Methods
52,"['loss', 'learning_rate', 'n_estimators', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'subsample', 'max_features', 'max_leaf_nodes', 'alpha', 'init', 'verbose', 'warm_start', 'random_state', 'presort']","[""loss : {'ls', 'lad', 'huber', 'quantile'}, optional (default='ls')"", 'learning_rate : float, optional (default=0.1)', 'n_estimators : int (default=100)', 'max_depth : integer, optional (default=3)', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'subsample : float, optional (default=1.0)', 'max_features : int, float, string or None, optional (default=None)', 'max_leaf_nodes : int or None, optional (default=None)', 'alpha : float (default=0.9)', 'init : BaseEstimator, None, optional (default=None)', 'verbose : int, default: 0', 'warm_start : bool, default: False', 'random_state : int, RandomState instance or None, optional (default=None)', ""presort : bool or 'auto', optional (default='auto')""]","[None, ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'float'>"", ""<class 'sklearn.base.BaseEstimator'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'bool'>""]","loss='ls', learning_rate=0.1, n_estimators=100, subsample=1.0, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, init=None, random_state=None, max_features=None, alpha=0.9, verbose=0, max_leaf_nodes=None, warm_start=False, presort='auto'","[('loss', ""'ls'""), ('learning_rate', '0.1'), ('n_estimators', '100'), ('subsample', '1.0'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_depth', '3'), ('init', 'None'), ('random_state', 'None'), ('max_features', 'None'), ('alpha', '0.9'), ('verbose', '0'), ('max_leaf_nodes', 'None'), ('warm_start', 'False'), ('presort', ""'auto'"")]",GradientBoostingRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingRegressor.html#sklearn.ensemble.GradientBoostingRegressor,sklearn.ensemble,Ensemble Methods
53,"['n_estimators', 'criterion', 'max_features', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'bootstrap', 'oob_score', 'n_jobs', 'random_state', 'verbose', 'warm_start', 'class_weight']","['n_estimators : integer, optional (default=10)', ""criterion : string, optional (default='gini')"", ""max_features : int, float, string or None, optional (default='auto')"", 'max_depth : integer or None, optional (default=None)', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', 'bootstrap : boolean, optional (default=True)', 'oob_score : bool', 'n_jobs : integer, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)', 'warm_start : bool, optional (default=False)', ""class_weight : dict, list of dicts, 'balanced', 'balanced_subsample' or None, optional""]","[""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'dict'>""]","n_estimators=10, criterion='gini', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=True, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False, class_weight=None","[('n_estimators', '10'), ('criterion', ""'gini'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', ""'auto'""), ('max_leaf_nodes', 'None'), ('bootstrap', 'True'), ('oob_score', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0'), ('warm_start', 'False'), ('class_weight', 'None')]",RandomForestClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html#sklearn.ensemble.RandomForestClassifier,sklearn.ensemble,Ensemble Methods
54,"['n_estimators', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'sparse_output', 'n_jobs', 'random_state', 'verbose', 'warm_start']","['n_estimators : int', 'max_depth : int', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', 'sparse_output : bool, optional (default=True)', 'n_jobs : integer, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)', 'warm_start : bool, optional (default=False)']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'bool'>""]","n_estimators=10, max_depth=5, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_leaf_nodes=None, sparse_output=True, n_jobs=1, random_state=None, verbose=0, warm_start=False","[('n_estimators', '10'), ('max_depth', '5'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_leaf_nodes', 'None'), ('sparse_output', 'True'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0'), ('warm_start', 'False')]",RandomTreesEmbedding,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomTreesEmbedding.html#sklearn.ensemble.RandomTreesEmbedding,sklearn.ensemble,Ensemble Methods
55,"['n_estimators', 'criterion', 'max_features', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'bootstrap', 'oob_score', 'n_jobs', 'random_state', 'verbose', 'warm_start']","['n_estimators : integer, optional (default=10)', ""criterion : string, optional (default='mse')"", ""max_features : int, float, string or None, optional (default='auto')"", 'max_depth : integer or None, optional (default=None)', 'min_samples_split : integer, optional (default=2)', 'min_samples_leaf : integer, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', 'bootstrap : boolean, optional (default=True)', 'oob_score : bool', 'n_jobs : integer, optional (default=1)', 'random_state : int, RandomState instance or None, optional (default=None)', 'verbose : int, optional (default=0)', 'warm_start : bool, optional (default=False)']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'bool'>""]","n_estimators=10, criterion='mse', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=True, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False","[('n_estimators', '10'), ('criterion', ""'mse'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', ""'auto'""), ('max_leaf_nodes', 'None'), ('bootstrap', 'True'), ('oob_score', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('verbose', '0'), ('warm_start', 'False')]",RandomForestRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html#sklearn.ensemble.RandomForestRegressor,sklearn.ensemble,Ensemble Methods
56,"['estimators', 'voting', 'weights']","['estimators : list of (string, estimator) tuples', ""voting : str, {'hard', 'soft'} (default='hard')"", 'weights : array-like, shape = [n_classifiers], optional (default=`None`)']","[""[<type 'str'>, <class 'sklearn.base.BaseEstimator'>]"", ""<type 'str'>"", ""<type 'numpy.ndarray'>""]","estimators=None, voting='hard', weights=None","[('estimators', None), ('voting', ""'hard'""), ('weights', 'None')]",VotingClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.VotingClassifier.html#sklearn.ensemble.VotingClassifier,sklearn.ensemble,Ensemble Methods
57,"['dtype', 'separator: string, optional', 'sparse: boolean, optional.', 'sort: boolean, optional.']","['dtype : callable, optional', 'separator: string, optional :', 'sparse: boolean, optional. :', 'sort: boolean, optional. :']","['<built-in function callable>', ""<type 'str'>"", ""<type 'bool'>"", ""<type 'bool'>""]","dtype=<class 'numpy.float64'>, separator='=', sparse=True, sort=True","[('dtype', ""<class 'numpy.float64'>""), ('separator', ""'='""), ('sparse', 'True'), ('sort', 'True')]",DictVectorizer,http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.DictVectorizer.html#sklearn.feature_extraction.DictVectorizer,sklearn.feature_extraction,Feature Extraction
58,"['n_features', 'dtype', 'input_type', 'non_negative']","['n_features : integer, optional', 'dtype : numpy type, optional, default np.float64', ""input_type : string, optional, default 'dict'"", 'non_negative : boolean, optional, default False']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'bool'>""]","n_features=1048576, input_type='dict', dtype=<class 'numpy.float64'>, non_negative=False","[('n_features', '1048576'), ('input_type', ""'dict'""), ('dtype', ""<class 'numpy.float64'>""), ('non_negative', 'False')]",FeatureHasher,http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.FeatureHasher.html#sklearn.feature_extraction.FeatureHasher,sklearn.feature_extraction,Feature Extraction
59,"['score_func', 'mode', 'param']","['score_func : callable', ""mode : {'percentile', 'k_best', 'fpr', 'fdr', 'fwe'}"", 'param : float or int depending on the feature selection mode']","['<built-in function callable>', None, ""(<type 'float'>, <type 'int'>)""]","score_func=<function f_classif at 0x7f5d61708510>, mode='percentile', param=1e-05","[('score_func', '<function f_classif at 0x7f5d61708510>'), ('mode', ""'percentile'""), ('param', '1e-05')]",GenericUnivariateSelect,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.GenericUnivariateSelect.html#sklearn.feature_selection.GenericUnivariateSelect,sklearn.feature_selection,Feature Selection
60,"['score_func', 'percentile']","['score_func : callable', 'percentile : int, optional, default=10']","['<built-in function callable>', ""<type 'int'>""]","score_func=<function f_classif at 0x7f49246ca048>, percentile=10","[('score_func', '<function f_classif at 0x7f49246ca048>'), ('percentile', '10')]",SelectPercentile,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectPercentile.html#sklearn.feature_selection.SelectPercentile,sklearn.feature_selection,Feature Selection
61,"['score_func', 'k']","['score_func : callable', ""k : int or 'all', optional, default=10""]","['<built-in function callable>', ""<type 'int'>""]","score_func=<function f_classif at 0x7f49246ca048>, k=10","[('score_func', '<function f_classif at 0x7f49246ca048>'), ('k', '10')]",SelectKBest,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectKBest.html#sklearn.feature_selection.SelectKBest,sklearn.feature_selection,Feature Selection
62,"['score_func', 'alpha']","['score_func : callable', 'alpha : float, optional']","['<built-in function callable>', ""<type 'float'>""]","score_func=<function f_classif at 0x7f5d61708510>, alpha=0.05","[('score_func', '<function f_classif at 0x7f5d61708510>'), ('alpha', '0.05')]",SelectFpr,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectFpr.html#sklearn.feature_selection.SelectFpr,sklearn.feature_selection,Feature Selection
63,"['score_func', 'alpha']","['score_func : callable', 'alpha : float, optional']","['<built-in function callable>', ""<type 'float'>""]","score_func=<function f_classif at 0x7f5d61708510>, alpha=0.05","[('score_func', '<function f_classif at 0x7f5d61708510>'), ('alpha', '0.05')]",SelectFdr,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectFdr.html#sklearn.feature_selection.SelectFdr,sklearn.feature_selection,Feature Selection
64,"['estimator', 'threshold', 'prefit']","['estimator : object', 'threshold : string, float, optional default None', 'prefit : bool, default False']","[""<type 'object'>"", ""<type 'float'>"", ""<type 'bool'>""]","estimator=None, threshold=None, prefit=False","[('estimator', None), ('threshold', 'None'), ('prefit', 'False')]",SelectFromModel,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectFromModel.html#sklearn.feature_selection.SelectFromModel,sklearn.feature_selection,Feature Selection
65,"['score_func', 'alpha']","['score_func : callable', 'alpha : float, optional']","['<built-in function callable>', ""<type 'float'>""]","score_func=<function f_classif at 0x7f5d61708510>, alpha=0.05","[('score_func', '<function f_classif at 0x7f5d61708510>'), ('alpha', '0.05')]",SelectFwe,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectFwe.html#sklearn.feature_selection.SelectFwe,sklearn.feature_selection,Feature Selection
66,"['estimator', 'n_features_to_select', 'step', 'estimator_params', 'verbose']","['estimator : object', 'n_features_to_select : int or None (default=None)', 'step : int or float, optional (default=1)', 'estimator_params : dict', 'verbose : int, default=0']","[""<type 'object'>"", ""(<type 'int'>, None)"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'int'>""]","estimator=None, n_features_to_select=None, step=1, estimator_params=None, verbose=0","[('estimator', None), ('n_features_to_select', 'None'), ('step', '1'), ('estimator_params', 'None'), ('verbose', '0')]",RFE,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.RFE.html#sklearn.feature_selection.RFE,sklearn.feature_selection,Feature Selection
67,"['estimator', 'step', 'cv', 'scoring', 'estimator_params', 'verbose']","['estimator : object', 'step : int or float, optional (default=1)', 'cv : int, cross-validation generator or an iterable, optional', 'scoring : string, callable or None, optional, default: None', 'estimator_params : dict', 'verbose : int, default=0']","[""<type 'object'>"", ""<type 'float'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", '<built-in function callable>', ""<type 'dict'>"", ""<type 'int'>""]","estimator=None, step=1, cv=None, scoring=None, estimator_params=None, verbose=0","[('estimator', None), ('step', '1'), ('cv', 'None'), ('scoring', 'None'), ('estimator_params', 'None'), ('verbose', '0')]",RFECV,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.RFECV.html#sklearn.feature_selection.RFECV,sklearn.feature_selection,Feature Selection
68,['threshold'],"['threshold : float, optional']","[""<type 'float'>""]",threshold=0.0,"[('threshold', '0.0')]",VarianceThreshold,http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.VarianceThreshold.html#sklearn.feature_selection.VarianceThreshold,sklearn.feature_selection,Feature Selection
69,"['regr', 'corr', 'beta0', 'storage_mode', 'verbose', 'theta0', 'thetaL', 'thetaU', 'normalize', 'nugget', 'optimizer', 'random_start', 'random_state: integer or numpy.RandomState, optional']","['regr : string or callable, optional', 'corr : string or callable, optional', 'beta0 : double array_like, optional', 'storage_mode : string, optional', 'verbose : boolean, optional', 'theta0 : double array_like, optional', 'thetaL : double array_like, optional', 'thetaU : double array_like, optional', 'normalize : boolean, optional', 'nugget : double or ndarray, optional', 'optimizer : string, optional', 'random_start : int, optional', 'random_state: integer or numpy.RandomState, optional :']","['<built-in function callable>', '<built-in function callable>', ""<type 'numpy.ndarray'>"", ""<type 'str'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'str'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","regr='constant', corr='squared_exponential', beta0=None, storage_mode='full', verbose=False, theta0=0.1, thetaL=None, thetaU=None, optimizer='fmin_cobyla', random_start=1, normalize=True, nugget=2.2204460492503131e-15, random_state=None","[('regr', ""'constant'""), ('corr', ""'squared_exponential'""), ('beta0', 'None'), ('storage_mode', ""'full'""), ('verbose', 'False'), ('theta0', '0.1'), ('thetaL', 'None'), ('thetaU', 'None'), ('optimizer', ""'fmin_cobyla'""), ('random_start', '1'), ('normalize', 'True'), ('nugget', '2.2204460492503131e-15'), ('random_state', 'None')]",GaussianProcess,http://scikit-learn.org/stable/modules/generated/sklearn.gaussian_process.GaussianProcess.html#sklearn.gaussian_process.GaussianProcess,sklearn.gaussian_process,Gaussian Processes
70,"['estimator', 'param_grid', 'scoring', 'fit_params', 'n_jobs', 'pre_dispatch', 'iid', 'cv', 'refit', 'verbose', 'error_score']","['estimator : estimator object.', 'param_grid : dict or list of dictionaries', 'scoring : string, callable or None, default=None', 'fit_params : dict, optional', 'n_jobs : int, default=1', 'pre_dispatch : int, or string, optional', 'iid : boolean, default=True', 'cv : int, cross-validation generator or an iterable, optional', 'refit : boolean, default=True', 'verbose : integer', ""error_score : 'raise' (default) or numeric""]","[""<class 'sklearn.base.BaseEstimator'>"", ""<type 'dict'>"", '<built-in function callable>', ""<type 'dict'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'str'>)"", ""<type 'bool'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'bool'>"", ""<type 'int'>"", None]","estimator=None, param_grid=None, scoring=None, fit_params=None, n_jobs=1, iid=True, refit=True, cv=None, verbose=0, pre_dispatch='2*n_jobs', error_score='raise'","[('estimator', None), ('param_grid', None), ('scoring', 'None'), ('fit_params', 'None'), ('n_jobs', '1'), ('iid', 'True'), ('refit', 'True'), ('cv', 'None'), ('verbose', '0'), ('pre_dispatch', ""'2*n_jobs'""), ('error_score', ""'raise'"")]",GridSearchCV,http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.GridSearchCV.html#sklearn.grid_search.GridSearchCV,sklearn.grid_search,Grid Search
71,['param_grid'],"['param_grid : dict of string to sequence, or sequence of such']","[""<type 'dict'>""]",param_grid=None,"[('param_grid', None)]",ParameterGrid,http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.ParameterGrid.html#sklearn.grid_search.ParameterGrid,sklearn.grid_search,Grid Search
72,"['param_distributions', 'n_iter', 'random_state']","['param_distributions : dict', 'n_iter : integer', 'random_state : int or RandomState']","[""<type 'dict'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","param_distributions=None, n_iter=None, random_state=None","[('param_distributions', None), ('n_iter', None), ('random_state', 'None')]",ParameterSampler,http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.ParameterSampler.html#sklearn.grid_search.ParameterSampler,sklearn.grid_search,Grid Search
73,"['estimator', 'param_distributions', 'n_iter', 'scoring', 'fit_params', 'n_jobs', 'pre_dispatch', 'iid', 'cv', 'refit', 'verbose', 'random_state', 'error_score']","['estimator : estimator object.', 'param_distributions : dict', 'n_iter : int, default=10', 'scoring : string, callable or None, default=None', 'fit_params : dict, optional', 'n_jobs : int, default=1', 'pre_dispatch : int, or string, optional', 'iid : boolean, default=True', 'cv : int, cross-validation generator or an iterable, optional', 'refit : boolean, default=True', 'verbose : integer', 'random_state : int or RandomState', ""error_score : 'raise' (default) or numeric""]","[""<class 'sklearn.base.BaseEstimator'>"", ""<type 'dict'>"", ""<type 'int'>"", '<built-in function callable>', ""<type 'dict'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'str'>)"", ""<type 'bool'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)"", None]","estimator=None, param_distributions=None, n_iter=10, scoring=None, fit_params=None, n_jobs=1, iid=True, refit=True, cv=None, verbose=0, pre_dispatch='2*n_jobs', random_state=None, error_score='raise'","[('estimator', None), ('param_distributions', None), ('n_iter', '10'), ('scoring', 'None'), ('fit_params', 'None'), ('n_jobs', '1'), ('iid', 'True'), ('refit', 'True'), ('cv', 'None'), ('verbose', '0'), ('pre_dispatch', ""'2*n_jobs'""), ('random_state', 'None'), ('error_score', ""'raise'"")]",RandomizedSearchCV,http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.RandomizedSearchCV.html#sklearn.grid_search.RandomizedSearchCV,sklearn.grid_search,Grid Search
74,"['y_min', 'y_max', 'increasing', 'out_of_bounds']","['y_min : optional, default: None', 'y_max : optional, default: None', 'increasing : boolean or string, optional, default: True', ""out_of_bounds : string, optional, default: 'nan'""]","[None, None, ""<type 'bool'>"", ""<type 'str'>""]","y_min=None, y_max=None, increasing=True, out_of_bounds='nan'","[('y_min', 'None'), ('y_max', 'None'), ('increasing', 'True'), ('out_of_bounds', ""'nan'"")]",IsotonicRegression,http://scikit-learn.org/stable/modules/generated/sklearn.isotonic.IsotonicRegression.html#sklearn.isotonic.IsotonicRegression,sklearn.isotonic,Isotonic regression
75,"['sample_steps', 'sample_interval']","['sample_steps : int, optional', 'sample_interval : float, optional']","[""<type 'int'>"", ""<type 'float'>""]","sample_steps=2, sample_interval=None","[('sample_steps', '2'), ('sample_interval', 'None')]",AdditiveChi2Sampler,http://scikit-learn.org/stable/modules/generated/sklearn.kernel_approximation.AdditiveChi2Sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler,sklearn.kernel_approximation,Kernel Approximation
76,"['kernel', 'n_components', 'gamma', 'degree', 'coef0', 'kernel_params', 'random_state']","[""kernel : string or callable, default='rbf'"", 'n_components : int', 'gamma : float, default=None', 'degree : float, default=3', 'coef0 : float, default=1', 'kernel_params : mapping of string to any, optional', 'random_state : {int, RandomState}, optional']","['<built-in function callable>', ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'dict'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","kernel='rbf', gamma=None, coef0=1, degree=3, kernel_params=None, n_components=100, random_state=None","[('kernel', ""'rbf'""), ('gamma', 'None'), ('coef0', '1'), ('degree', '3'), ('kernel_params', 'None'), ('n_components', '100'), ('random_state', 'None')]",Nystroem,http://scikit-learn.org/stable/modules/generated/sklearn.kernel_approximation.Nystroem.html#sklearn.kernel_approximation.Nystroem,sklearn.kernel_approximation,Kernel Approximation
77,"['gamma', 'n_components', 'random_state']","['gamma : float', 'n_components : int', 'random_state : {int, RandomState}, optional']","[""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","gamma=1.0, n_components=100, random_state=None","[('gamma', '1.0'), ('n_components', '100'), ('random_state', 'None')]",RBFSampler,http://scikit-learn.org/stable/modules/generated/sklearn.kernel_approximation.RBFSampler.html#sklearn.kernel_approximation.RBFSampler,sklearn.kernel_approximation,Kernel Approximation
78,"['skewedness', 'n_components', 'random_state']","['skewedness : float', 'n_components : int', 'random_state : {int, RandomState}, optional']","[""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","skewedness=1.0, n_components=100, random_state=None","[('skewedness', '1.0'), ('n_components', '100'), ('random_state', 'None')]",SkewedChi2Sampler,http://scikit-learn.org/stable/modules/generated/sklearn.kernel_approximation.SkewedChi2Sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler,sklearn.kernel_approximation,Kernel Approximation
79,"['alpha', 'kernel', 'gamma', 'degree', 'coef0', 'kernel_params']","['alpha : {float, array-like}, shape = [n_targets]', ""kernel : string or callable, default='linear'"", 'gamma : float, default=None', 'degree : float, default=3', 'coef0 : float, default=1', 'kernel_params : mapping of string to any, optional']","[""<type 'numpy.ndarray'>"", '<built-in function callable>', ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'dict'>""]","alpha=1, kernel='linear', gamma=None, degree=3, coef0=1, kernel_params=None","[('alpha', '1'), ('kernel', ""'linear'""), ('gamma', 'None'), ('degree', '3'), ('coef0', '1'), ('kernel_params', 'None')]",KernelRidge,http://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html#sklearn.kernel_ridge.KernelRidge,sklearn.kernel_ridge,Kernel Ridge Regression
80,"['solver', 'shrinkage', 'priors', 'n_components', 'store_covariance', 'tol']","['solver : string, optional', 'shrinkage : string or float, optional', 'priors : array, optional, shape (n_classes,)', 'n_components : int, optional', 'store_covariance : bool, optional', 'tol : float, optional']","[""<type 'str'>"", ""<type 'float'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'float'>""]","solver='svd', shrinkage=None, priors=None, n_components=None, store_covariance=False, tol=0.0001","[('solver', ""'svd'""), ('shrinkage', 'None'), ('priors', 'None'), ('n_components', 'None'), ('store_covariance', 'False'), ('tol', '0.0001')]",LinearDiscriminantAnalysis,http://scikit-learn.org/stable/modules/generated/sklearn.discriminant_analysis.LinearDiscriminantAnalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis,sklearn.discriminant_analysis,Discriminant Analysis
81,"['priors', 'reg_param']","['priors : array, optional, shape = [n_classes]', 'reg_param : float, optional']","[""<type 'numpy.ndarray'>"", ""<type 'float'>""]","priors=None, reg_param=0.0, store_covariances=False, tol=0.0001","[('priors', 'None'), ('reg_param', '0.0'), ('store_covariances', 'False'), ('tol', '0.0001')]",QuadraticDiscriminantAnalysis,http://scikit-learn.org/stable/modules/generated/sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis,sklearn.discriminant_analysis,Discriminant Analysis
82,"['n_iter', 'tol', 'alpha_1', 'alpha_2', 'lambda_1', 'lambda_2', 'compute_score', 'threshold_lambda', 'fit_intercept', 'normalize', 'copy_X', 'verbose']","['n_iter : int, optional', 'tol : float, optional', 'alpha_1 : float, optional', 'alpha_2 : float, optional', 'lambda_1 : float, optional', 'lambda_2 : float, optional', 'compute_score : boolean, optional', 'threshold_lambda : float, optional', 'fit_intercept : boolean, optional', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True.', 'verbose : boolean, optional, default False']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","n_iter=300, tol=0.001, alpha_1=1e-06, alpha_2=1e-06, lambda_1=1e-06, lambda_2=1e-06, compute_score=False, threshold_lambda=10000.0, fit_intercept=True, normalize=False, copy_X=True, verbose=False","[('n_iter', '300'), ('tol', '0.001'), ('alpha_1', '1e-06'), ('alpha_2', '1e-06'), ('lambda_1', '1e-06'), ('lambda_2', '1e-06'), ('compute_score', 'False'), ('threshold_lambda', '10000.0'), ('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('verbose', 'False')]",ARDRegression,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.ARDRegression.html#sklearn.linear_model.ARDRegression,sklearn.linear_model,Generalized Linear Models
83,"['n_iter', 'tol', 'alpha_1', 'alpha_2', 'lambda_1', 'lambda_2', 'compute_score', 'fit_intercept', 'normalize', 'copy_X', 'verbose']","['n_iter : int, optional', 'tol : float, optional', 'alpha_1 : float, optional', 'alpha_2 : float, optional', 'lambda_1 : float, optional', 'lambda_2 : float, optional', 'compute_score : boolean, optional', 'fit_intercept : boolean, optional', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', 'verbose : boolean, optional, default False']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","n_iter=300, tol=0.001, alpha_1=1e-06, alpha_2=1e-06, lambda_1=1e-06, lambda_2=1e-06, compute_score=False, fit_intercept=True, normalize=False, copy_X=True, verbose=False","[('n_iter', '300'), ('tol', '0.001'), ('alpha_1', '1e-06'), ('alpha_2', '1e-06'), ('lambda_1', '1e-06'), ('lambda_2', '1e-06'), ('compute_score', 'False'), ('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('verbose', 'False')]",BayesianRidge,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.BayesianRidge.html#sklearn.linear_model.BayesianRidge,sklearn.linear_model,Generalized Linear Models
84,"['alpha', 'l1_ratio', 'fit_intercept', 'normalize', 'precompute', 'max_iter', 'copy_X', 'tol', 'warm_start', 'positive', 'selection', 'random_state']","['alpha : float', 'l1_ratio : float', 'fit_intercept : bool', 'normalize : boolean, optional, default False', ""precompute : True | False | 'auto' | array-like"", 'max_iter : int, optional', 'copy_X : boolean, optional, default True', 'tol : float, optional', 'warm_start : bool, optional', 'positive : bool, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","alpha=1.0, l1_ratio=0.5, fit_intercept=True, normalize=False, precompute=False, max_iter=1000, copy_X=True, tol=0.0001, warm_start=False, positive=False, random_state=None, selection='cyclic'","[('alpha', '1.0'), ('l1_ratio', '0.5'), ('fit_intercept', 'True'), ('normalize', 'False'), ('precompute', 'False'), ('max_iter', '1000'), ('copy_X', 'True'), ('tol', '0.0001'), ('warm_start', 'False'), ('positive', 'False'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",ElasticNet,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.ElasticNet.html#sklearn.linear_model.ElasticNet,sklearn.linear_model,Generalized Linear Models
85,"['l1_ratio', 'eps', 'n_alphas', 'alphas', 'precompute', 'max_iter', 'tol', 'cv', 'verbose', 'n_jobs', 'positive', 'selection', 'random_state', 'fit_intercept', 'normalize', 'copy_X']","['l1_ratio : float or array of floats, optional', 'eps : float, optional', 'n_alphas : int, optional', 'alphas : numpy array, optional', ""precompute : True | False | 'auto' | array-like"", 'max_iter : int, optional', 'tol : float, optional', 'cv : int, cross-validation generator or an iterable, optional', 'verbose : bool or integer', 'n_jobs : integer, optional', 'positive : bool, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True']","[""<type 'numpy.ndarray'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""(<type 'bool'>, <type 'int'>)"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","l1_ratio=0.5, eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, precompute='auto', max_iter=1000, tol=0.0001, cv=None, copy_X=True, verbose=0, n_jobs=1, positive=False, random_state=None, selection='cyclic'","[('l1_ratio', '0.5'), ('eps', '0.001'), ('n_alphas', '100'), ('alphas', 'None'), ('fit_intercept', 'True'), ('normalize', 'False'), ('precompute', ""'auto'""), ('max_iter', '1000'), ('tol', '0.0001'), ('cv', 'None'), ('copy_X', 'True'), ('verbose', '0'), ('n_jobs', '1'), ('positive', 'False'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",ElasticNetCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.ElasticNetCV.html#sklearn.linear_model.ElasticNetCV,sklearn.linear_model,Generalized Linear Models
86,"['n_nonzero_coefs', 'fit_intercept', 'positive', 'verbose', 'normalize', 'precompute', 'copy_X', 'eps', 'fit_path']","['n_nonzero_coefs : int, optional', 'fit_intercept : boolean', 'positive : boolean (default=False)', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default False', ""precompute : True | False | 'auto' | array-like"", 'copy_X : boolean, optional, default True', 'eps : float, optional', 'fit_path : boolean']","[""<type 'int'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>""]","fit_intercept=True, verbose=False, normalize=True, precompute='auto', n_nonzero_coefs=500, eps=2.2204460492503131e-16, copy_X=True, fit_path=True, positive=False","[('fit_intercept', 'True'), ('verbose', 'False'), ('normalize', 'True'), ('precompute', ""'auto'""), ('n_nonzero_coefs', '500'), ('eps', '2.2204460492503131e-16'), ('copy_X', 'True'), ('fit_path', 'True'), ('positive', 'False')]",Lars,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lars.html#sklearn.linear_model.Lars,sklearn.linear_model,Generalized Linear Models
87,"['fit_intercept', 'positive', 'verbose', 'normalize', 'copy_X', 'precompute', 'max_iter: integer, optional', 'cv', 'max_n_alphas', 'n_jobs', 'eps']","['fit_intercept : boolean', 'positive : boolean (default=False)', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', ""precompute : True | False | 'auto' | array-like"", 'max_iter: integer, optional :', 'cv : int, cross-validation generator or an iterable, optional', 'max_n_alphas : integer, optional', 'n_jobs : integer, optional', 'eps : float, optional']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>""]","fit_intercept=True, verbose=False, max_iter=500, normalize=True, precompute='auto', cv=None, max_n_alphas=1000, n_jobs=1, eps=2.2204460492503131e-16, copy_X=True, positive=False","[('fit_intercept', 'True'), ('verbose', 'False'), ('max_iter', '500'), ('normalize', 'True'), ('precompute', ""'auto'""), ('cv', 'None'), ('max_n_alphas', '1000'), ('n_jobs', '1'), ('eps', '2.2204460492503131e-16'), ('copy_X', 'True'), ('positive', 'False')]",LarsCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LarsCV.html#sklearn.linear_model.LarsCV,sklearn.linear_model,Generalized Linear Models
88,"['alpha', 'fit_intercept', 'normalize', 'copy_X', 'precompute', 'max_iter', 'tol', 'warm_start', 'positive', 'selection', 'random_state']","['alpha : float, optional', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', ""precompute : True | False | 'auto' | array-like"", 'max_iter : int, optional', 'tol : float, optional', 'warm_start : bool, optional', 'positive : bool, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","alpha=1.0, fit_intercept=True, normalize=False, precompute=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, positive=False, random_state=None, selection='cyclic'","[('alpha', '1.0'), ('fit_intercept', 'True'), ('normalize', 'False'), ('precompute', 'False'), ('copy_X', 'True'), ('max_iter', '1000'), ('tol', '0.0001'), ('warm_start', 'False'), ('positive', 'False'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",Lasso,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html#sklearn.linear_model.Lasso,sklearn.linear_model,Generalized Linear Models
89,"['eps', 'n_alphas', 'alphas', 'precompute', 'max_iter', 'tol', 'cv', 'verbose', 'n_jobs', 'positive', 'selection', 'random_state', 'fit_intercept', 'normalize', 'copy_X']","['eps : float, optional', 'n_alphas : int, optional', 'alphas : numpy array, optional', ""precompute : True | False | 'auto' | array-like"", 'max_iter : int, optional', 'tol : float, optional', 'cv : int, cross-validation generator or an iterable, optional', 'verbose : bool or integer', 'n_jobs : integer, optional', 'positive : bool, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)', 'fit_intercept : boolean, default True', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True']","[""<type 'float'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""(<type 'bool'>, <type 'int'>)"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, precompute='auto', max_iter=1000, tol=0.0001, copy_X=True, cv=None, verbose=False, n_jobs=1, positive=False, random_state=None, selection='cyclic'","[('eps', '0.001'), ('n_alphas', '100'), ('alphas', 'None'), ('fit_intercept', 'True'), ('normalize', 'False'), ('precompute', ""'auto'""), ('max_iter', '1000'), ('tol', '0.0001'), ('copy_X', 'True'), ('cv', 'None'), ('verbose', 'False'), ('n_jobs', '1'), ('positive', 'False'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",LassoCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LassoCV.html#sklearn.linear_model.LassoCV,sklearn.linear_model,Generalized Linear Models
90,"['alpha', 'fit_intercept', 'positive', 'verbose', 'normalize', 'copy_X', 'precompute', 'max_iter', 'eps', 'fit_path']","['alpha : float', 'fit_intercept : boolean', 'positive : boolean (default=False)', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', ""precompute : True | False | 'auto' | array-like"", 'max_iter : integer, optional', 'eps : float, optional', 'fit_path : boolean']","[""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>""]","alpha=1.0, fit_intercept=True, verbose=False, normalize=True, precompute='auto', max_iter=500, eps=2.2204460492503131e-16, copy_X=True, fit_path=True, positive=False","[('alpha', '1.0'), ('fit_intercept', 'True'), ('verbose', 'False'), ('normalize', 'True'), ('precompute', ""'auto'""), ('max_iter', '500'), ('eps', '2.2204460492503131e-16'), ('copy_X', 'True'), ('fit_path', 'True'), ('positive', 'False')]",LassoLars,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LassoLars.html#sklearn.linear_model.LassoLars,sklearn.linear_model,Generalized Linear Models
91,"['fit_intercept', 'positive', 'verbose', 'normalize', 'precompute', 'max_iter', 'cv', 'max_n_alphas', 'n_jobs', 'eps', 'copy_X']","['fit_intercept : boolean', 'positive : boolean (default=False)', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default False', ""precompute : True | False | 'auto' | array-like"", 'max_iter : integer, optional', 'cv : int, cross-validation generator or an iterable, optional', 'max_n_alphas : integer, optional', 'n_jobs : integer, optional', 'eps : float, optional', 'copy_X : boolean, optional, default True']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>""]","fit_intercept=True, verbose=False, max_iter=500, normalize=True, precompute='auto', cv=None, max_n_alphas=1000, n_jobs=1, eps=2.2204460492503131e-16, copy_X=True, positive=False","[('fit_intercept', 'True'), ('verbose', 'False'), ('max_iter', '500'), ('normalize', 'True'), ('precompute', ""'auto'""), ('cv', 'None'), ('max_n_alphas', '1000'), ('n_jobs', '1'), ('eps', '2.2204460492503131e-16'), ('copy_X', 'True'), ('positive', 'False')]",LassoLarsCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LassoLarsCV.html#sklearn.linear_model.LassoLarsCV,sklearn.linear_model,Generalized Linear Models
92,"['criterion', 'fit_intercept', 'positive', 'verbose', 'normalize', 'copy_X', 'precompute', 'max_iter', 'eps']","[""criterion : 'bic' | 'aic'"", 'fit_intercept : boolean', 'positive : boolean (default=False)', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', ""precompute : True | False | 'auto' | array-like"", 'max_iter : integer, optional', 'eps : float, optional']","[None, ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'float'>""]","criterion='aic', fit_intercept=True, verbose=False, normalize=True, precompute='auto', max_iter=500, eps=2.2204460492503131e-16, copy_X=True, positive=False","[('criterion', ""'aic'""), ('fit_intercept', 'True'), ('verbose', 'False'), ('normalize', 'True'), ('precompute', ""'auto'""), ('max_iter', '500'), ('eps', '2.2204460492503131e-16'), ('copy_X', 'True'), ('positive', 'False')]",LassoLarsIC,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LassoLarsIC.html#sklearn.linear_model.LassoLarsIC,sklearn.linear_model,Generalized Linear Models
93,"['fit_intercept', 'normalize', 'copy_X', 'n_jobs']","['fit_intercept : boolean, optional', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', 'n_jobs : int, optional, default 1']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>""]","fit_intercept=True, normalize=False, copy_X=True, n_jobs=1","[('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('n_jobs', '1')]",LinearRegression,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html#sklearn.linear_model.LinearRegression,sklearn.linear_model,Generalized Linear Models
94,"['penalty', 'dual', 'C', 'fit_intercept', 'intercept_scaling', 'class_weight', 'max_iter', 'random_state', 'solver', 'tol', 'multi_class', 'verbose', 'warm_start', 'n_jobs']","[""penalty : str, 'l1' or 'l2'"", 'dual : bool', 'C : float, optional (default=1.0)', 'fit_intercept : bool, default: True', 'intercept_scaling : float, default: 1', ""class_weight : dict or 'balanced', optional"", 'max_iter : int', 'random_state : int seed, RandomState instance, or None (default)', ""solver : {'newton-cg', 'lbfgs', 'liblinear', 'sag'}"", 'tol : float, optional', ""multi_class : str, {'ovr', 'multinomial'}"", 'verbose : int', 'warm_start : bool, optional', 'n_jobs : int, optional']","[""<type 'str'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", None, ""<type 'float'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'int'>""]","penalty='l2', dual=False, tol=0.0001, C=1.0, fit_intercept=True, intercept_scaling=1, class_weight=None, random_state=None, solver='liblinear', max_iter=100, multi_class='ovr', verbose=0, warm_start=False, n_jobs=1","[('penalty', ""'l2'""), ('dual', 'False'), ('tol', '0.0001'), ('C', '1.0'), ('fit_intercept', 'True'), ('intercept_scaling', '1'), ('class_weight', 'None'), ('random_state', 'None'), ('solver', ""'liblinear'""), ('max_iter', '100'), ('multi_class', ""'ovr'""), ('verbose', '0'), ('warm_start', 'False'), ('n_jobs', '1')]",LogisticRegression,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression,sklearn.linear_model,Generalized Linear Models
95,"['Cs', 'fit_intercept', 'class_weight', 'cv', 'penalty', 'dual', 'scoring', 'solver', 'tol', 'max_iter', 'n_jobs', 'verbose', 'refit', 'multi_class', 'intercept_scaling', 'random_state']","['Cs : list of floats | int', 'fit_intercept : bool, default: True', ""class_weight : dict or 'balanced', optional"", 'cv : integer or cross-validation generator', ""penalty : str, 'l1' or 'l2'"", 'dual : bool', 'scoring : callabale', ""solver : {'newton-cg', 'lbfgs', 'liblinear', 'sag'}"", 'tol : float, optional', 'max_iter : int, optional', 'n_jobs : int, optional', 'verbose : int', 'refit : bool', ""multi_class : str, {'ovr', 'multinomial'}"", 'intercept_scaling : float, default 1.', 'random_state : int seed, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'bool'>"", ""<type 'dict'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'bool'>"", '<built-in function callable>', None, ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","Cs=10, fit_intercept=True, cv=None, dual=False, penalty='l2', scoring=None, solver='lbfgs', tol=0.0001, max_iter=100, class_weight=None, n_jobs=1, verbose=0, refit=True, intercept_scaling=1.0, multi_class='ovr', random_state=None","[('Cs', '10'), ('fit_intercept', 'True'), ('cv', 'None'), ('dual', 'False'), ('penalty', ""'l2'""), ('scoring', 'None'), ('solver', ""'lbfgs'""), ('tol', '0.0001'), ('max_iter', '100'), ('class_weight', 'None'), ('n_jobs', '1'), ('verbose', '0'), ('refit', 'True'), ('intercept_scaling', '1.0'), ('multi_class', ""'ovr'""), ('random_state', 'None')]",LogisticRegressionCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegressionCV.html#sklearn.linear_model.LogisticRegressionCV,sklearn.linear_model,Generalized Linear Models
96,"['alpha', 'fit_intercept', 'normalize', 'copy_X', 'max_iter', 'tol', 'warm_start', 'selection', 'random_state']","['alpha : float, optional', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', 'max_iter : int, optional', 'tol : float, optional', 'warm_start : bool, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, random_state=None, selection='cyclic'","[('alpha', '1.0'), ('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('max_iter', '1000'), ('tol', '0.0001'), ('warm_start', 'False'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",MultiTaskLasso,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.MultiTaskLasso.html#sklearn.linear_model.MultiTaskLasso,sklearn.linear_model,Generalized Linear Models
97,"['alpha', 'l1_ratio', 'fit_intercept', 'normalize', 'copy_X', 'max_iter', 'tol', 'warm_start', 'selection', 'random_state']","['alpha : float, optional', 'l1_ratio : float', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', 'max_iter : int, optional', 'tol : float, optional', 'warm_start : bool, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","alpha=1.0, l1_ratio=0.5, fit_intercept=True, normalize=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, random_state=None, selection='cyclic'","[('alpha', '1.0'), ('l1_ratio', '0.5'), ('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('max_iter', '1000'), ('tol', '0.0001'), ('warm_start', 'False'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",MultiTaskElasticNet,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.MultiTaskElasticNet.html#sklearn.linear_model.MultiTaskElasticNet,sklearn.linear_model,Generalized Linear Models
98,"['eps', 'alphas', 'n_alphas', 'fit_intercept', 'normalize', 'copy_X', 'max_iter', 'tol', 'cv', 'verbose', 'n_jobs', 'selection', 'random_state']","['eps : float, optional', 'alphas : array-like, optional', 'n_alphas : int, optional', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', 'max_iter : int, optional', 'tol : float, optional', 'cv : int, cross-validation generator or an iterable, optional', 'verbose : bool or integer', 'n_jobs : integer, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""(<type 'bool'>, <type 'int'>)"", ""<type 'int'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, max_iter=1000, tol=0.0001, copy_X=True, cv=None, verbose=False, n_jobs=1, random_state=None, selection='cyclic'","[('eps', '0.001'), ('n_alphas', '100'), ('alphas', 'None'), ('fit_intercept', 'True'), ('normalize', 'False'), ('max_iter', '1000'), ('tol', '0.0001'), ('copy_X', 'True'), ('cv', 'None'), ('verbose', 'False'), ('n_jobs', '1'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",MultiTaskLassoCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.MultiTaskLassoCV.html#sklearn.linear_model.MultiTaskLassoCV,sklearn.linear_model,Generalized Linear Models
99,"['eps', 'alphas', 'n_alphas', 'l1_ratio', 'fit_intercept', 'normalize', 'copy_X', 'max_iter', 'tol', 'cv', 'verbose', 'n_jobs', 'selection', 'random_state']","['eps : float, optional', 'alphas : array-like, optional', 'n_alphas : int, optional', 'l1_ratio : float or array of floats', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'copy_X : boolean, optional, default True', 'max_iter : int, optional', 'tol : float, optional', 'cv : int, cross-validation generator or an iterable, optional', 'verbose : bool or integer', 'n_jobs : integer, optional', ""selection : str, default 'cyclic'"", 'random_state : int, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""(<type 'bool'>, <type 'int'>)"", ""<type 'int'>"", ""<type 'str'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","l1_ratio=0.5, eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, max_iter=1000, tol=0.0001, cv=None, copy_X=True, verbose=0, n_jobs=1, random_state=None, selection='cyclic'","[('l1_ratio', '0.5'), ('eps', '0.001'), ('n_alphas', '100'), ('alphas', 'None'), ('fit_intercept', 'True'), ('normalize', 'False'), ('max_iter', '1000'), ('tol', '0.0001'), ('cv', 'None'), ('copy_X', 'True'), ('verbose', '0'), ('n_jobs', '1'), ('random_state', 'None'), ('selection', ""'cyclic'"")]",MultiTaskElasticNetCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.MultiTaskElasticNetCV.html#sklearn.linear_model.MultiTaskElasticNetCV,sklearn.linear_model,Generalized Linear Models
100,"['n_nonzero_coefs', 'tol', 'fit_intercept', 'normalize', 'precompute', 'Read more in the :ref:`User Guide <omp>`.']","['n_nonzero_coefs : int, optional', 'tol : float, optional', 'fit_intercept : boolean, optional', 'normalize : boolean, optional', ""precompute : {True, False, 'auto'}, default 'auto'"", 'Read more in the :ref:`User Guide <omp>`. :']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", None, None]","n_nonzero_coefs=None, tol=None, fit_intercept=True, normalize=True, precompute='auto'","[('n_nonzero_coefs', 'None'), ('tol', 'None'), ('fit_intercept', 'True'), ('normalize', 'True'), ('precompute', ""'auto'"")]",OrthogonalMatchingPursuit,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.OrthogonalMatchingPursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit,sklearn.linear_model,Generalized Linear Models
101,"['copy', 'fit_intercept', 'normalize', 'max_iter', 'cv', 'n_jobs', 'verbose', 'Read more in the :ref:`User Guide <omp>`.']","['copy : bool, optional', 'fit_intercept : boolean, optional', 'normalize : boolean, optional', 'max_iter : integer, optional', 'cv : int, cross-validation generator or an iterable, optional', 'n_jobs : integer, optional', 'verbose : boolean or integer, optional', 'Read more in the :ref:`User Guide <omp>`. :']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'int'>"", ""<type 'bool'>"", None]","copy=True, fit_intercept=True, normalize=True, max_iter=None, cv=None, n_jobs=1, verbose=False","[('copy', 'True'), ('fit_intercept', 'True'), ('normalize', 'True'), ('max_iter', 'None'), ('cv', 'None'), ('n_jobs', '1'), ('verbose', 'False')]",OrthogonalMatchingPursuitCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.OrthogonalMatchingPursuitCV.html#sklearn.linear_model.OrthogonalMatchingPursuitCV,sklearn.linear_model,Generalized Linear Models
102,"['C', 'fit_intercept', 'n_iter', 'shuffle', 'random_state', 'verbose', 'n_jobs', 'loss', 'warm_start', 'class_weight']","['C : float', 'fit_intercept : bool, default=False', 'n_iter : int, optional', 'shuffle : bool, default=True', 'random_state : int seed, RandomState instance, or None (default)', 'verbose : integer, optional', 'n_jobs : integer, optional', 'loss : string, optional', 'warm_start : bool, optional', ""class_weight : dict, {class_label: weight} or 'balanced' or None, optional""]","[""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'bool'>"", ""<type 'dict'>""]","C=1.0, fit_intercept=True, n_iter=5, shuffle=True, verbose=0, loss='hinge', n_jobs=1, random_state=None, warm_start=False, class_weight=None","[('C', '1.0'), ('fit_intercept', 'True'), ('n_iter', '5'), ('shuffle', 'True'), ('verbose', '0'), ('loss', ""'hinge'""), ('n_jobs', '1'), ('random_state', 'None'), ('warm_start', 'False'), ('class_weight', 'None')]",PassiveAggressiveClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.PassiveAggressiveClassifier.html#sklearn.linear_model.PassiveAggressiveClassifier,sklearn.linear_model,Generalized Linear Models
103,"['C', 'epsilon', 'fit_intercept', 'n_iter', 'shuffle', 'random_state', 'verbose', 'loss', 'warm_start']","['C : float', 'epsilon : float', 'fit_intercept : bool', 'n_iter : int, optional', 'shuffle : bool, default=True', 'random_state : int seed, RandomState instance, or None (default)', 'verbose : integer, optional', 'loss : string, optional', 'warm_start : bool, optional']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'bool'>""]","C=1.0, fit_intercept=True, n_iter=5, shuffle=True, verbose=0, loss='epsilon_insensitive', epsilon=0.1, random_state=None, warm_start=False","[('C', '1.0'), ('fit_intercept', 'True'), ('n_iter', '5'), ('shuffle', 'True'), ('verbose', '0'), ('loss', ""'epsilon_insensitive'""), ('epsilon', '0.1'), ('random_state', 'None'), ('warm_start', 'False')]",PassiveAggressiveRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.PassiveAggressiveRegressor.html#sklearn.linear_model.PassiveAggressiveRegressor,sklearn.linear_model,Generalized Linear Models
104,"['penalty', 'alpha', 'fit_intercept', 'n_iter', 'shuffle', 'random_state', 'verbose', 'n_jobs', 'eta0', 'class_weight', 'warm_start']","[""penalty : None, 'l2' or 'l1' or 'elasticnet'"", 'alpha : float', 'fit_intercept : bool', 'n_iter : int, optional', 'shuffle : bool, optional, default True', 'random_state : int seed, RandomState instance, or None (default)', 'verbose : integer, optional', 'n_jobs : integer, optional', 'eta0 : double', ""class_weight : dict, {class_label: weight} or 'balanced' or None, optional"", 'warm_start : bool, optional']","[None, ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'bool'>""]","penalty=None, alpha=0.0001, fit_intercept=True, n_iter=5, shuffle=True, verbose=0, eta0=1.0, n_jobs=1, random_state=0, class_weight=None, warm_start=False","[('penalty', 'None'), ('alpha', '0.0001'), ('fit_intercept', 'True'), ('n_iter', '5'), ('shuffle', 'True'), ('verbose', '0'), ('eta0', '1.0'), ('n_jobs', '1'), ('random_state', '0'), ('class_weight', 'None'), ('warm_start', 'False')]",Perceptron,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Perceptron.html#sklearn.linear_model.Perceptron,sklearn.linear_model,Generalized Linear Models
105,"['alpha', 'scaling', 'sample_fraction', 'n_resampling', 'selection_threshold: float, optional', 'fit_intercept', 'verbose', 'normalize', 'precompute', 'max_iter', 'eps', 'n_jobs', 'random_state', 'pre_dispatch', 'memory']","[""alpha : float, 'aic', or 'bic', optional"", 'scaling : float, optional', 'sample_fraction : float, optional', 'n_resampling : int, optional', 'selection_threshold: float, optional :', 'fit_intercept : boolean, optional', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default True', ""precompute : True | False | 'auto'"", 'max_iter : integer, optional', 'eps : float, optional', 'n_jobs : integer, optional', 'random_state : int, RandomState instance or None, optional (default=None)', 'pre_dispatch : int, or string, optional', 'memory : Instance of joblib.Memory or string']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", None, ""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""(<type 'int'>, <type 'str'>)"", ""(<class 'joblib.memory.Memory'>, <type 'str'>)""]","alpha='aic', scaling=0.5, sample_fraction=0.75, n_resampling=200, selection_threshold=0.25, fit_intercept=True, verbose=False, normalize=True, precompute='auto', max_iter=500, eps=2.2204460492503131e-16, random_state=None, n_jobs=1, pre_dispatch='3*n_jobs', memory=Memory(cachedir=None)","[('alpha', ""'aic'""), ('scaling', '0.5'), ('sample_fraction', '0.75'), ('n_resampling', '200'), ('selection_threshold', '0.25'), ('fit_intercept', 'True'), ('verbose', 'False'), ('normalize', 'True'), ('precompute', ""'auto'""), ('max_iter', '500'), ('eps', '2.2204460492503131e-16'), ('random_state', 'None'), ('n_jobs', '1'), ('pre_dispatch', ""'3*n_jobs'""), ('memory', 'Memory(cachedir=None)')]",RandomizedLasso,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RandomizedLasso.html#sklearn.linear_model.RandomizedLasso,sklearn.linear_model,Generalized Linear Models
106,"['C', 'scaling', 'sample_fraction', 'n_resampling', 'selection_threshold', 'fit_intercept', 'verbose', 'normalize', 'tol', 'n_jobs', 'random_state', 'pre_dispatch', 'memory']","['C : float, optional, default=1', 'scaling : float, optional, default=0.5', 'sample_fraction : float, optional, default=0.75', 'n_resampling : int, optional, default=200', 'selection_threshold : float, optional, default=0.25', 'fit_intercept : boolean, optional, default=True', 'verbose : boolean or integer, optional', 'normalize : boolean, optional, default=True', 'tol : float, optional, default=1e-3', 'n_jobs : integer, optional', 'random_state : int, RandomState instance or None, optional (default=None)', 'pre_dispatch : int, or string, optional', 'memory : Instance of joblib.Memory or string']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""(<type 'int'>, <type 'str'>)"", ""(<class 'joblib.memory.Memory'>, <type 'str'>)""]","C=1, scaling=0.5, sample_fraction=0.75, n_resampling=200, selection_threshold=0.25, tol=0.001, fit_intercept=True, verbose=False, normalize=True, random_state=None, n_jobs=1, pre_dispatch='3*n_jobs', memory=Memory(cachedir=None)","[('C', '1'), ('scaling', '0.5'), ('sample_fraction', '0.75'), ('n_resampling', '200'), ('selection_threshold', '0.25'), ('tol', '0.001'), ('fit_intercept', 'True'), ('verbose', 'False'), ('normalize', 'True'), ('random_state', 'None'), ('n_jobs', '1'), ('pre_dispatch', ""'3*n_jobs'""), ('memory', 'Memory(cachedir=None)')]",RandomizedLogisticRegression,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RandomizedLogisticRegression.html#sklearn.linear_model.RandomizedLogisticRegression,sklearn.linear_model,Generalized Linear Models
107,"['base_estimator', 'min_samples', 'residual_threshold', 'is_data_valid', 'is_model_valid', 'max_trials', 'stop_n_inliers', 'stop_score', 'stop_probability', 'residual_metric', 'random_state']","['base_estimator : object, optional', 'min_samples : int (>= 1) or float ([0, 1]), optional', 'residual_threshold : float, optional', 'is_data_valid : callable, optional', 'is_model_valid : callable, optional', 'max_trials : int, optional', 'stop_n_inliers : int, optional', 'stop_score : float, optional', 'stop_probability : float in range [0, 1], optional', 'residual_metric : callable, optional', 'random_state : integer or numpy.RandomState, optional']","[""<type 'object'>"", ""<type 'float'>"", ""<type 'float'>"", '<built-in function callable>', '<built-in function callable>', ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", '<built-in function callable>', ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","base_estimator=None, min_samples=None, residual_threshold=None, is_data_valid=None, is_model_valid=None, max_trials=100, stop_n_inliers=inf, stop_score=inf, stop_probability=0.99, residual_metric=None, random_state=None","[('base_estimator', 'None'), ('min_samples', 'None'), ('residual_threshold', 'None'), ('is_data_valid', 'None'), ('is_model_valid', 'None'), ('max_trials', '100'), ('stop_n_inliers', 'inf'), ('stop_score', 'inf'), ('stop_probability', '0.99'), ('residual_metric', 'None'), ('random_state', 'None')]",RANSACRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RANSACRegressor.html#sklearn.linear_model.RANSACRegressor,sklearn.linear_model,Generalized Linear Models
108,"['alpha', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'solver', 'tol', 'random_state']","['alpha : {float, array-like}, shape (n_targets)', 'copy_X : boolean, optional, default True', 'fit_intercept : boolean', 'max_iter : int, optional', 'normalize : boolean, optional, default False', ""solver : {'auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag'}"", 'tol : float', 'random_state : int seed, RandomState instance, or None (default)']","[""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", None, ""<type 'float'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, solver='auto', random_state=None","[('alpha', '1.0'), ('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('max_iter', 'None'), ('tol', '0.001'), ('solver', ""'auto'""), ('random_state', 'None')]",Ridge,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html#sklearn.linear_model.Ridge,sklearn.linear_model,Generalized Linear Models
109,"['alpha', 'class_weight', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'solver', 'tol', 'random_state']","['alpha : float', ""class_weight : dict or 'balanced', optional"", 'copy_X : boolean, optional, default True', 'fit_intercept : boolean', 'max_iter : int, optional', 'normalize : boolean, optional, default False', ""solver : {'auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag'}"", 'tol : float', 'random_state : int seed, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'dict'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", None, ""<type 'float'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, class_weight=None, solver='auto', random_state=None","[('alpha', '1.0'), ('fit_intercept', 'True'), ('normalize', 'False'), ('copy_X', 'True'), ('max_iter', 'None'), ('tol', '0.001'), ('class_weight', 'None'), ('solver', ""'auto'""), ('random_state', 'None')]",RidgeClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeClassifier.html#sklearn.linear_model.RidgeClassifier,sklearn.linear_model,Generalized Linear Models
110,"['alphas', 'fit_intercept', 'normalize', 'scoring', 'cv', 'class_weight']","['alphas : numpy array of shape [n_alphas]', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'scoring : string, callable or None, optional, default: None', 'cv : int, cross-validation generator or an iterable, optional', ""class_weight : dict or 'balanced', optional""]","[""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'bool'>"", '<built-in function callable>', ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", ""<type 'dict'>""]","alphas=(0.1, 1.0=None, 10.0)=None, fit_intercept=True, normalize=False, scoring=None, cv=None, class_weight=None","[('alphas', '(0.1'), ('1.0', None), ('10.0)', None), ('fit_intercept', 'True'), ('normalize', 'False'), ('scoring', 'None'), ('cv', 'None'), ('class_weight', 'None')]",RidgeClassifierCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeClassifierCV.html#sklearn.linear_model.RidgeClassifierCV,sklearn.linear_model,Generalized Linear Models
111,"['alphas', 'fit_intercept', 'normalize', 'scoring', 'cv', 'gcv_mode', 'store_cv_values']","['alphas : numpy array of shape [n_alphas]', 'fit_intercept : boolean', 'normalize : boolean, optional, default False', 'scoring : string, callable or None, optional, default: None', 'cv : int, cross-validation generator or an iterable, optional', ""gcv_mode : {None, 'auto', 'svd', eigen'}, optional"", 'store_cv_values : boolean, default=False']","[""<type 'numpy.ndarray'>"", ""<type 'bool'>"", ""<type 'bool'>"", '<built-in function callable>', ""(<type 'int'>, <class 'sklearn.cross_validation.KFold'>)"", None, ""<type 'bool'>""]","alphas=(0.1, 1.0=None, 10.0)=None, fit_intercept=True, normalize=False, scoring=None, cv=None, gcv_mode=None, store_cv_values=False","[('alphas', '(0.1'), ('1.0', None), ('10.0)', None), ('fit_intercept', 'True'), ('normalize', 'False'), ('scoring', 'None'), ('cv', 'None'), ('gcv_mode', 'None'), ('store_cv_values', 'False')]",RidgeCV,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeCV.html#sklearn.linear_model.RidgeCV,sklearn.linear_model,Generalized Linear Models
112,"['loss', 'penalty', 'alpha', 'l1_ratio', 'fit_intercept', 'n_iter', 'shuffle', 'random_state', 'verbose', 'epsilon', 'n_jobs', 'learning_rate', 'eta0', 'power_t', 'class_weight', 'warm_start', 'average']","[""loss : str, 'hinge', 'log', 'modified_huber', 'squared_hinge',                'perceptron', or a regression loss: 'squared_loss', 'huber',                'epsilon_insensitive', or 'squared_epsilon_insensitive'"", ""penalty : str, 'none', 'l2', 'l1', or 'elasticnet'"", 'alpha : float', 'l1_ratio : float', 'fit_intercept : bool', 'n_iter : int, optional', 'shuffle : bool, optional', 'random_state : int seed, RandomState instance, or None (default)', 'verbose : integer, optional', 'epsilon : float', 'n_jobs : integer, optional', 'learning_rate : string, optional', 'eta0 : double', 'power_t : double', ""class_weight : dict, {class_label: weight} or 'balanced' or None, optional"", 'warm_start : bool, optional', 'average : bool or int, optional']","[""<type 'str'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'bool'>"", ""(<type 'bool'>, <type 'int'>)""]","loss='hinge', penalty='l2', alpha=0.0001, l1_ratio=0.15, fit_intercept=True, n_iter=5, shuffle=True, verbose=0, epsilon=0.1, n_jobs=1, random_state=None, learning_rate='optimal', eta0=0.0, power_t=0.5, class_weight=None, warm_start=False, average=False","[('loss', ""'hinge'""), ('penalty', ""'l2'""), ('alpha', '0.0001'), ('l1_ratio', '0.15'), ('fit_intercept', 'True'), ('n_iter', '5'), ('shuffle', 'True'), ('verbose', '0'), ('epsilon', '0.1'), ('n_jobs', '1'), ('random_state', 'None'), ('learning_rate', ""'optimal'""), ('eta0', '0.0'), ('power_t', '0.5'), ('class_weight', 'None'), ('warm_start', 'False'), ('average', 'False')]",SGDClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html#sklearn.linear_model.SGDClassifier,sklearn.linear_model,Generalized Linear Models
113,"['loss', 'penalty', 'alpha', 'l1_ratio', 'fit_intercept', 'n_iter', 'shuffle', 'random_state', 'verbose', 'epsilon', 'learning_rate', 'eta0', 'power_t', 'warm_start', 'average']","[""loss : str, 'squared_loss', 'huber', 'epsilon_insensitive',                 or 'squared_epsilon_insensitive'"", ""penalty : str, 'none', 'l2', 'l1', or 'elasticnet'"", 'alpha : float', 'l1_ratio : float', 'fit_intercept : bool', 'n_iter : int, optional', 'shuffle : bool, optional', 'random_state : int seed, RandomState instance, or None (default)', 'verbose : integer, optional', 'epsilon : float', 'learning_rate : string, optional', 'eta0 : double, optional', 'power_t : double, optional', 'warm_start : bool, optional', 'average : bool or int, optional']","[""<type 'str'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""(<type 'bool'>, <type 'int'>)""]","loss='squared_loss', penalty='l2', alpha=0.0001, l1_ratio=0.15, fit_intercept=True, n_iter=5, shuffle=True, verbose=0, epsilon=0.1, random_state=None, learning_rate='invscaling', eta0=0.01, power_t=0.25, warm_start=False, average=False","[('loss', ""'squared_loss'""), ('penalty', ""'l2'""), ('alpha', '0.0001'), ('l1_ratio', '0.15'), ('fit_intercept', 'True'), ('n_iter', '5'), ('shuffle', 'True'), ('verbose', '0'), ('epsilon', '0.1'), ('random_state', 'None'), ('learning_rate', ""'invscaling'""), ('eta0', '0.01'), ('power_t', '0.25'), ('warm_start', 'False'), ('average', 'False')]",SGDRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDRegressor.html#sklearn.linear_model.SGDRegressor,sklearn.linear_model,Generalized Linear Models
114,"['fit_intercept', 'copy_X', 'max_subpopulation', 'n_subsamples', 'max_iter', 'tol', 'random_state', 'n_jobs', 'verbose']","['fit_intercept : boolean, optional, default True', 'copy_X : boolean, optional, default True', 'max_subpopulation : int, optional, default 1e4', 'n_subsamples : int, optional, default None', 'max_iter : int, optional, default 300', 'tol : float, optional, default 1.e-3', 'random_state : RandomState or an int seed, optional, default None', 'n_jobs : integer, optional, default 1', 'verbose : boolean, optional, default False']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'bool'>""]","fit_intercept=True, copy_X=True, max_subpopulation=10000.0, n_subsamples=None, max_iter=300, tol=0.001, random_state=None, n_jobs=1, verbose=False","[('fit_intercept', 'True'), ('copy_X', 'True'), ('max_subpopulation', '10000.0'), ('n_subsamples', 'None'), ('max_iter', '300'), ('tol', '0.001'), ('random_state', 'None'), ('n_jobs', '1'), ('verbose', 'False')]",TheilSenRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.TheilSenRegressor.html#sklearn.linear_model.TheilSenRegressor,sklearn.linear_model,Generalized Linear Models
115,"['n_neighbors', 'n_components', 'reg', 'eigen_solver', 'tol', 'max_iter', 'method', 'hessian_tol', 'modified_tol', 'neighbors_algorithm', 'random_state: numpy.RandomState or int, optional']","['n_neighbors : integer', 'n_components : integer', 'reg : float', ""eigen_solver : string, {'auto', 'arpack', 'dense'}"", 'tol : float, optional', 'max_iter : integer', ""method : string ('standard', 'hessian', 'modified' or 'ltsa')"", 'hessian_tol : float, optional', 'modified_tol : float, optional', ""neighbors_algorithm : string ['auto'|'brute'|'kd_tree'|'ball_tree']"", 'random_state: numpy.RandomState or int, optional :']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'str'>"", ""<type 'int'>""]","n_neighbors=5, n_components=2, reg=0.001, eigen_solver='auto', tol=1e-06, max_iter=100, method='standard', hessian_tol=0.0001, modified_tol=1e-12, neighbors_algorithm='auto', random_state=None","[('n_neighbors', '5'), ('n_components', '2'), ('reg', '0.001'), ('eigen_solver', ""'auto'""), ('tol', '1e-06'), ('max_iter', '100'), ('method', ""'standard'""), ('hessian_tol', '0.0001'), ('modified_tol', '1e-12'), ('neighbors_algorithm', ""'auto'""), ('random_state', 'None')]",LocallyLinearEmbedding,http://scikit-learn.org/stable/modules/generated/sklearn.manifold.LocallyLinearEmbedding.html#sklearn.manifold.LocallyLinearEmbedding,sklearn.manifold,Manifold Learning
116,"['n_neighbors', 'n_components', 'eigen_solver', 'tol', 'max_iter', 'path_method', 'neighbors_algorithm']","['n_neighbors : integer', 'n_components : integer', ""eigen_solver : ['auto'|'arpack'|'dense']"", 'tol : float', 'max_iter : integer', ""path_method : string ['auto'|'FW'|'D']"", ""neighbors_algorithm : string ['auto'|'brute'|'kd_tree'|'ball_tree']""]","[""<type 'int'>"", ""<type 'int'>"", None, ""<type 'float'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'str'>""]","n_neighbors=5, n_components=2, eigen_solver='auto', tol=0, max_iter=None, path_method='auto', neighbors_algorithm='auto'","[('n_neighbors', '5'), ('n_components', '2'), ('eigen_solver', ""'auto'""), ('tol', '0'), ('max_iter', 'None'), ('path_method', ""'auto'""), ('neighbors_algorithm', ""'auto'"")]",Isomap,http://scikit-learn.org/stable/modules/generated/sklearn.manifold.Isomap.html#sklearn.manifold.Isomap,sklearn.manifold,Manifold Learning
117,"['metric', 'n_components', 'n_init', 'max_iter', 'verbose', 'eps', 'n_jobs', 'random_state', 'dissimilarity']","['metric : boolean, optional, default: True', 'n_components : int, optional, default: 2', 'n_init : int, optional, default: 4', 'max_iter : int, optional, default: 300', 'verbose : int, optional, default: 0', 'eps : float, optional, default: 1e-6', 'n_jobs : int, optional, default: 1', 'random_state : integer or numpy.RandomState, optional', 'dissimilarity : string']","[""<type 'bool'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)"", ""<type 'str'>""]","n_components=2, metric=True, n_init=4, max_iter=300, verbose=0, eps=0.001, n_jobs=1, random_state=None, dissimilarity='euclidean'","[('n_components', '2'), ('metric', 'True'), ('n_init', '4'), ('max_iter', '300'), ('verbose', '0'), ('eps', '0.001'), ('n_jobs', '1'), ('random_state', 'None'), ('dissimilarity', ""'euclidean'"")]",MDS,http://scikit-learn.org/stable/modules/generated/sklearn.manifold.MDS.html#sklearn.manifold.MDS,sklearn.manifold,Manifold Learning
118,"['n_components', 'eigen_solver', 'random_state', 'affinity', 'gamma', 'n_neighbors']","['n_components : integer, default: 2', ""eigen_solver : {None, 'arpack', 'lobpcg', or 'amg'}"", 'random_state : int seed, RandomState instance, or None, default', 'affinity : string or callable, default', 'gamma : float, optional, default', 'n_neighbors : int, default']","[""<type 'int'>"", None, ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", '<built-in function callable>', ""<type 'float'>"", ""<type 'int'>""]","n_components=2, affinity='nearest_neighbors', gamma=None, random_state=None, eigen_solver=None, n_neighbors=None","[('n_components', '2'), ('affinity', ""'nearest_neighbors'""), ('gamma', 'None'), ('random_state', 'None'), ('eigen_solver', 'None'), ('n_neighbors', 'None')]",SpectralEmbedding,http://scikit-learn.org/stable/modules/generated/sklearn.manifold.SpectralEmbedding.html#sklearn.manifold.SpectralEmbedding,sklearn.manifold,Manifold Learning
119,"['n_components', 'perplexity', 'early_exaggeration', 'learning_rate', 'n_iter', 'n_iter_without_progress', 'min_grad_norm', 'metric', 'init', 'verbose', 'random_state', 'method', 'angle']","['n_components : int, optional (default: 2)', 'perplexity : float, optional (default: 30)', 'early_exaggeration : float, optional (default: 4.0)', 'learning_rate : float, optional (default: 1000)', 'n_iter : int, optional (default: 1000)', 'n_iter_without_progress : int, optional (default: 30)', 'min_grad_norm : float, optional (default: 1E-7)', 'metric : string or callable, optional', ""init : string, optional (default: 'random')"", 'verbose : int, optional (default: 0)', 'random_state : int or RandomState instance or None (default)', ""method : string (default: 'barnes_hut')"", 'angle : float (default: 0.5)']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", '<built-in function callable>', ""<type 'str'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'str'>"", ""<type 'float'>""]","n_components=2, perplexity=30.0, early_exaggeration=4.0, learning_rate=1000.0, n_iter=1000, n_iter_without_progress=30, min_grad_norm=1e-07, metric='euclidean', init='random', verbose=0, random_state=None, method='barnes_hut', angle=0.5","[('n_components', '2'), ('perplexity', '30.0'), ('early_exaggeration', '4.0'), ('learning_rate', '1000.0'), ('n_iter', '1000'), ('n_iter_without_progress', '30'), ('min_grad_norm', '1e-07'), ('metric', ""'euclidean'""), ('init', ""'random'""), ('verbose', '0'), ('random_state', 'None'), ('method', ""'barnes_hut'""), ('angle', '0.5')]",TSNE,http://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html#sklearn.manifold.TSNE,sklearn.manifold,Manifold Learning
120,"['n_components', 'covariance_type', 'random_state: RandomState or an int seed (None by default)', 'min_covar', 'tol', 'n_iter', 'n_init', 'params', 'init_params', 'verbose']","['n_components : int, optional', 'covariance_type : string, optional', 'random_state: RandomState or an int seed (None by default) :', 'min_covar : float, optional', 'tol : float, optional', 'n_iter : int, optional', 'n_init : int, optional', 'params : string, optional', 'init_params : string, optional', 'verbose : int, default: 0']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'str'>"", ""<type 'int'>""]","n_components=1, covariance_type='diag', random_state=None, thresh=None, tol=0.001, min_covar=0.001, n_iter=100, n_init=1, params='wmc', init_params='wmc', verbose=0","[('n_components', '1'), ('covariance_type', ""'diag'""), ('random_state', 'None'), ('thresh', 'None'), ('tol', '0.001'), ('min_covar', '0.001'), ('n_iter', '100'), ('n_init', '1'), ('params', ""'wmc'""), ('init_params', ""'wmc'""), ('verbose', '0')]",GMM,http://scikit-learn.org/stable/modules/generated/sklearn.mixture.GMM.html#sklearn.mixture.GMM,sklearn.mixture,Gaussian Mixture Models
121,"['n_components: int, default 1', ""covariance_type: string, default 'diag'"", 'alpha: float, default 1', 'tol', 'n_iter', 'params', 'init_params', 'verbose']","['n_components: int, default 1 :', ""covariance_type: string, default 'diag' :"", 'alpha: float, default 1 :', 'tol : float, default 1e-3', 'n_iter : int, default 10', ""params : string, default 'wmc'"", ""init_params : string, default 'wmc'"", 'verbose : int, default 0']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'str'>"", ""<type 'int'>""]","n_components=1, covariance_type='diag', alpha=1.0, random_state=None, thresh=None, tol=0.001, verbose=0, min_covar=None, n_iter=10, params='wmc', init_params='wmc'","[('n_components', '1'), ('covariance_type', ""'diag'""), ('alpha', '1.0'), ('random_state', 'None'), ('thresh', 'None'), ('tol', '0.001'), ('verbose', '0'), ('min_covar', 'None'), ('n_iter', '10'), ('params', ""'wmc'""), ('init_params', ""'wmc'"")]",DPGMM,http://scikit-learn.org/stable/modules/generated/sklearn.mixture.DPGMM.html#sklearn.mixture.DPGMM,sklearn.mixture,Gaussian Mixture Models
122,"['n_components: int, default 1', ""covariance_type: string, default 'diag'"", 'alpha: float, default 1', 'tol', 'n_iter', 'params', 'init_params', 'verbose']","['n_components: int, default 1 :', ""covariance_type: string, default 'diag' :"", 'alpha: float, default 1 :', 'tol : float, default 1e-3', 'n_iter : int, default 10', ""params : string, default 'wmc'"", ""init_params : string, default 'wmc'"", 'verbose : int, default 0']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'str'>"", ""<type 'str'>"", ""<type 'int'>""]","n_components=1, covariance_type='diag', alpha=1.0, random_state=None, thresh=None, tol=0.001, verbose=0, min_covar=None, n_iter=10, params='wmc', init_params='wmc'","[('n_components', '1'), ('covariance_type', ""'diag'""), ('alpha', '1.0'), ('random_state', 'None'), ('thresh', 'None'), ('tol', '0.001'), ('verbose', '0'), ('min_covar', 'None'), ('n_iter', '10'), ('params', ""'wmc'""), ('init_params', ""'wmc'"")]",VBGMM,http://scikit-learn.org/stable/modules/generated/sklearn.mixture.VBGMM.html#sklearn.mixture.VBGMM,sklearn.mixture,Gaussian Mixture Models
123,"['estimator', 'n_jobs']","['estimator : estimator object', 'n_jobs : int, optional, default: 1']","[""<class 'sklearn.base.BaseEstimator'>"", ""<type 'int'>""]","estimator=None, n_jobs=1","[('estimator', None), ('n_jobs', '1')]",OneVsRestClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.multiclass.OneVsRestClassifier.html#sklearn.multiclass.OneVsRestClassifier,sklearn.multiclass,Multiclass and multilabel classification
124,"['estimator', 'n_jobs']","['estimator : estimator object', 'n_jobs : int, optional, default: 1']","[""<class 'sklearn.base.BaseEstimator'>"", ""<type 'int'>""]","estimator=None, n_jobs=1","[('estimator', None), ('n_jobs', '1')]",OneVsOneClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.multiclass.OneVsOneClassifier.html#sklearn.multiclass.OneVsOneClassifier,sklearn.multiclass,Multiclass and multilabel classification
125,"['estimator', 'code_size', 'random_state', 'n_jobs']","['estimator : estimator object', 'code_size : float', 'random_state : numpy.RandomState, optional', 'n_jobs : int, optional, default: 1']","[""<class 'sklearn.base.BaseEstimator'>"", ""<type 'float'>"", ""<type 'mtrand.RandomState'>"", ""<type 'int'>""]","estimator=None, code_size=1.5, random_state=None, n_jobs=1","[('estimator', None), ('code_size', '1.5'), ('random_state', 'None'), ('n_jobs', '1')]",OutputCodeClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.multiclass.OutputCodeClassifier.html#sklearn.multiclass.OutputCodeClassifier,sklearn.multiclass,Multiclass and multilabel classification
126,"['X', 'y', 'sample_weight']","['X : array-like, shape (n_samples, n_features)', 'y : array-like, shape (n_samples,)', 'sample_weight : array-like, shape (n_samples,), optional']","[""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>""]",,[],GaussianNB,http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB,sklearn.naive_bayes,Naive Bayes
127,"['alpha', 'fit_prior', 'class_prior']","['alpha : float, optional (default=1.0)', 'fit_prior : boolean', 'class_prior : array-like, size (n_classes,)']","[""<type 'float'>"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>""]","alpha=1.0, fit_prior=True, class_prior=None","[('alpha', '1.0'), ('fit_prior', 'True'), ('class_prior', 'None')]",MultinomialNB,http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html#sklearn.naive_bayes.MultinomialNB,sklearn.naive_bayes,Naive Bayes
128,"['alpha', 'binarize', 'fit_prior', 'class_prior']","['alpha : float, optional (default=1.0)', 'binarize : float or None, optional', 'fit_prior : boolean', 'class_prior : array-like, size=[n_classes,]']","[""<type 'float'>"", ""(<type 'float'>, None)"", ""<type 'bool'>"", ""<type 'numpy.ndarray'>""]","alpha=1.0, binarize=0.0, fit_prior=True, class_prior=None","[('alpha', '1.0'), ('binarize', '0.0'), ('fit_prior', 'True'), ('class_prior', 'None')]",BernoulliNB,http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB,sklearn.naive_bayes,Naive Bayes
129,"['n_neighbors', 'radius', 'algorithm', 'leaf_size', 'p: integer, optional (default = 2)', 'metric', 'metric_params', 'n_jobs']","['n_neighbors : int, optional (default = 5)', 'radius : float, optional (default = 1.0)', ""algorithm : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"", 'leaf_size : int, optional (default = 30)', 'p: integer, optional (default = 2) :', ""metric : string or callable, default 'minkowski'"", 'metric_params : dict, optional (default = None)', 'n_jobs : int, optional (default = 1)']","[""<type 'int'>"", ""<type 'float'>"", None, ""<type 'int'>"", ""<type 'int'>"", '<built-in function callable>', ""<type 'dict'>"", ""<type 'int'>""]","n_neighbors=5, radius=1.0, algorithm='auto', leaf_size=30, metric='minkowski', p=2, metric_params=None, n_jobs=1, **kwargs=None","[('n_neighbors', '5'), ('radius', '1.0'), ('algorithm', ""'auto'""), ('leaf_size', '30'), ('metric', ""'minkowski'""), ('p', '2'), ('metric_params', 'None'), ('n_jobs', '1'), ('**kwargs', None)]",NearestNeighbors,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.NearestNeighbors.html#sklearn.neighbors.NearestNeighbors,sklearn.neighbors,Nearest Neighbors
130,"['n_neighbors', 'weights', 'algorithm', 'leaf_size', 'metric', 'p', 'metric_params', 'n_jobs']","['n_neighbors : int, optional (default = 5)', 'weights : str or callable', ""algorithm : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"", 'leaf_size : int, optional (default = 30)', ""metric : string or DistanceMetric object (default = 'minkowski')"", 'p : integer, optional (default = 2)', 'metric_params : dict, optional (default = None)', 'n_jobs : int, optional (default = 1)']","[""<type 'int'>"", '<built-in function callable>', None, ""<type 'int'>"", ""<type 'object'>"", ""<type 'int'>"", ""<type 'dict'>"", ""<type 'int'>""]","n_neighbors=5, weights='uniform', algorithm='auto', leaf_size=30, p=2, metric='minkowski', metric_params=None, n_jobs=1, **kwargs=None","[('n_neighbors', '5'), ('weights', ""'uniform'""), ('algorithm', ""'auto'""), ('leaf_size', '30'), ('p', '2'), ('metric', ""'minkowski'""), ('metric_params', 'None'), ('n_jobs', '1'), ('**kwargs', None)]",KNeighborsClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsClassifier,sklearn.neighbors,Nearest Neighbors
131,"['radius', 'weights', 'algorithm', 'leaf_size', 'metric', 'p', 'outlier_label', 'metric_params']","['radius : float, optional (default = 1.0)', 'weights : str or callable', ""algorithm : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"", 'leaf_size : int, optional (default = 30)', ""metric : string or DistanceMetric object (default='minkowski')"", 'p : integer, optional (default = 2)', 'outlier_label : int, optional (default = None)', 'metric_params : dict, optional (default = None)']","[""<type 'float'>"", '<built-in function callable>', None, ""<type 'int'>"", ""<type 'object'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'dict'>""]","radius=1.0, weights='uniform', algorithm='auto', leaf_size=30, p=2, metric='minkowski', outlier_label=None, metric_params=None, **kwargs=None","[('radius', '1.0'), ('weights', ""'uniform'""), ('algorithm', ""'auto'""), ('leaf_size', '30'), ('p', '2'), ('metric', ""'minkowski'""), ('outlier_label', 'None'), ('metric_params', 'None'), ('**kwargs', None)]",RadiusNeighborsClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.RadiusNeighborsClassifier.html#sklearn.neighbors.RadiusNeighborsClassifier,sklearn.neighbors,Nearest Neighbors
132,"['n_neighbors', 'weights', 'algorithm', 'leaf_size', 'metric', 'p', 'metric_params', 'n_jobs']","['n_neighbors : int, optional (default = 5)', 'weights : str or callable', ""algorithm : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"", 'leaf_size : int, optional (default = 30)', ""metric : string or DistanceMetric object (default='minkowski')"", 'p : integer, optional (default = 2)', 'metric_params : dict, optional (default = None)', 'n_jobs : int, optional (default = 1)']","[""<type 'int'>"", '<built-in function callable>', None, ""<type 'int'>"", ""<type 'object'>"", ""<type 'int'>"", ""<type 'dict'>"", ""<type 'int'>""]","n_neighbors=5, weights='uniform', algorithm='auto', leaf_size=30, p=2, metric='minkowski', metric_params=None, n_jobs=1, **kwargs=None","[('n_neighbors', '5'), ('weights', ""'uniform'""), ('algorithm', ""'auto'""), ('leaf_size', '30'), ('p', '2'), ('metric', ""'minkowski'""), ('metric_params', 'None'), ('n_jobs', '1'), ('**kwargs', None)]",KNeighborsRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsRegressor.html#sklearn.neighbors.KNeighborsRegressor,sklearn.neighbors,Nearest Neighbors
133,"['radius', 'weights', 'algorithm', 'leaf_size', 'metric', 'p', 'metric_params']","['radius : float, optional (default = 1.0)', 'weights : str or callable', ""algorithm : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"", 'leaf_size : int, optional (default = 30)', ""metric : string or DistanceMetric object (default='minkowski')"", 'p : integer, optional (default = 2)', 'metric_params : dict, optional (default = None)']","[""<type 'float'>"", '<built-in function callable>', None, ""<type 'int'>"", ""<type 'object'>"", ""<type 'int'>"", ""<type 'dict'>""]","radius=1.0, weights='uniform', algorithm='auto', leaf_size=30, p=2, metric='minkowski', metric_params=None, **kwargs=None","[('radius', '1.0'), ('weights', ""'uniform'""), ('algorithm', ""'auto'""), ('leaf_size', '30'), ('p', '2'), ('metric', ""'minkowski'""), ('metric_params', 'None'), ('**kwargs', None)]",RadiusNeighborsRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.RadiusNeighborsRegressor.html#sklearn.neighbors.RadiusNeighborsRegressor,sklearn.neighbors,Nearest Neighbors
134,"['metric: string, or callable', 'shrink_threshold']","['metric: string, or callable :', 'shrink_threshold : float, optional (default = None)']","['<built-in function callable>', ""<type 'float'>""]","metric='euclidean', shrink_threshold=None","[('metric', ""'euclidean'""), ('shrink_threshold', 'None')]",NearestCentroid,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.NearestCentroid.html#sklearn.neighbors.NearestCentroid,sklearn.neighbors,Nearest Neighbors
135,"['X', 'leaf_size', 'metric', 'Additional keywords are passed to the distance metric class.']","['X : array-like, shape = [n_samples, n_features]', 'leaf_size : positive integer (default = 20)', 'metric : string or DistanceMetric object', 'Additional keywords are passed to the distance metric class. :']","[""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'object'>"", None]",,[],BallTree,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.BallTree.html#sklearn.neighbors.BallTree,sklearn.neighbors,Nearest Neighbors
136,"['X', 'leaf_size', 'metric', 'Additional keywords are passed to the distance metric class.']","['X : array-like, shape = [n_samples, n_features]', 'leaf_size : positive integer (default = 20)', 'metric : string or DistanceMetric object', 'Additional keywords are passed to the distance metric class. :']","[""<type 'numpy.ndarray'>"", ""<type 'int'>"", ""<type 'object'>"", None]",,[],KDTree,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KDTree.html#sklearn.neighbors.KDTree,sklearn.neighbors,Nearest Neighbors
137,"['n_estimators', 'min_hash_match', 'n_candidates', 'n_neighbors', 'radius', 'radius_cutoff_ratio', 'random_state']","['n_estimators : int (default = 10)', 'min_hash_match : int (default = 4)', 'n_candidates : int (default = 10)', 'n_neighbors : int (default = 5)', 'radius : float, optinal (default = 1.0)', 'radius_cutoff_ratio : float, optional (default = 0.9)', 'random_state : int, RandomState instance or None, optional (default=None)']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","n_estimators=10, radius=1.0, n_candidates=50, n_neighbors=5, min_hash_match=4, radius_cutoff_ratio=0.9, random_state=None","[('n_estimators', '10'), ('radius', '1.0'), ('n_candidates', '50'), ('n_neighbors', '5'), ('min_hash_match', '4'), ('radius_cutoff_ratio', '0.9'), ('random_state', 'None')]",LSHForest,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.LSHForest.html#sklearn.neighbors.LSHForest,sklearn.neighbors,Nearest Neighbors
138,"['metric', '**kwargs']","['metric : string or class name', '**kwargs :']","[""<type 'str'>"", None]",,[],DistanceMetric,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.DistanceMetric.html#sklearn.neighbors.DistanceMetric,sklearn.neighbors,Nearest Neighbors
139,"['bandwidth', 'algorithm', 'kernel', 'metric', 'atol', 'rtol', 'breadth_first', 'leaf_size', 'metric_params']","['bandwidth : float', 'algorithm : string', 'kernel : string', 'metric : string', 'atol : float', 'rtol : float', 'breadth_first : boolean', 'leaf_size : int', 'metric_params : dict']","[""<type 'float'>"", ""<type 'str'>"", ""<type 'str'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'dict'>""]","bandwidth=1.0, algorithm='auto', kernel='gaussian', metric='euclidean', atol=0, rtol=0, breadth_first=True, leaf_size=40, metric_params=None","[('bandwidth', '1.0'), ('algorithm', ""'auto'""), ('kernel', ""'gaussian'""), ('metric', ""'euclidean'""), ('atol', '0'), ('rtol', '0'), ('breadth_first', 'True'), ('leaf_size', '40'), ('metric_params', 'None')]",KernelDensity,http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KernelDensity.html#sklearn.neighbors.KernelDensity,sklearn.neighbors,Nearest Neighbors
140,"['n_components', 'learning_rate', 'batch_size', 'n_iter', 'verbose', 'random_state']","['n_components : int, optional', 'learning_rate : float, optional', 'batch_size : int, optional', 'n_iter : int, optional', 'verbose : int, optional', 'random_state : integer or numpy.RandomState, optional']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'int'>"", ""(<type 'int'>, <type 'mtrand.RandomState'>)""]","n_components=256, learning_rate=0.1, batch_size=10, n_iter=10, verbose=0, random_state=None","[('n_components', '256'), ('learning_rate', '0.1'), ('batch_size', '10'), ('n_iter', '10'), ('verbose', '0'), ('random_state', 'None')]",BernoulliRBM,http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.BernoulliRBM.html#sklearn.neural_network.BernoulliRBM,sklearn.neural_network,Neural network models
141,"['base_estimator', 'method', 'cv']","['base_estimator : instance BaseEstimator', ""method : 'sigmoid' or 'isotonic'"", ""cv : integer, cross-validation generator, iterable or 'prefit', optional""]","[""<class 'sklearn.base.BaseEstimator'>"", None, ""<type 'int'>""]","base_estimator=None, method='sigmoid', cv=3","[('base_estimator', 'None'), ('method', ""'sigmoid'""), ('cv', '3')]",CalibratedClassifierCV,http://scikit-learn.org/stable/modules/generated/sklearn.calibration.CalibratedClassifierCV.html#sklearn.calibration.CalibratedClassifierCV,sklearn.calibration,Probability Calibration
142,"['n_components', 'scale', 'max_iter', 'tol', 'copy']","['n_components : int, (default 2)', 'scale : boolean, (default True)', 'max_iter : an integer, (default 500)', 'tol : non-negative real', 'copy : boolean, default True']","[""<type 'int'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>""]","n_components=2, scale=True, max_iter=500, tol=1e-06, copy=True","[('n_components', '2'), ('scale', 'True'), ('max_iter', '500'), ('tol', '1e-06'), ('copy', 'True')]",PLSRegression,http://scikit-learn.org/stable/modules/generated/sklearn.cross_decomposition.PLSRegression.html#sklearn.cross_decomposition.PLSRegression,sklearn.cross_decomposition,Cross decomposition
143,"['scale', 'algorithm', 'max_iter', 'tol', 'copy', 'n_components']","['scale : boolean, scale data? (default True)', ""algorithm : string, 'nipals' or 'svd'"", 'max_iter : an integer, (default 500)', 'tol : non-negative real, default 1e-06', 'copy : boolean, default True', 'n_components : int, number of components to keep. (default 2).']","[""<type 'bool'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>""]","n_components=2, scale=True, algorithm='nipals', max_iter=500, tol=1e-06, copy=True","[('n_components', '2'), ('scale', 'True'), ('algorithm', ""'nipals'""), ('max_iter', '500'), ('tol', '1e-06'), ('copy', 'True')]",PLSCanonical,http://scikit-learn.org/stable/modules/generated/sklearn.cross_decomposition.PLSCanonical.html#sklearn.cross_decomposition.PLSCanonical,sklearn.cross_decomposition,Cross decomposition
144,"['n_components', 'scale', 'max_iter', 'tol', 'copy']","['n_components : int, (default 2).', 'scale : boolean, (default True)', 'max_iter : an integer, (default 500)', 'tol : non-negative real, default 1e-06.', 'copy : boolean']","[""<type 'int'>"", ""<type 'bool'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'bool'>""]","n_components=2, scale=True, max_iter=500, tol=1e-06, copy=True","[('n_components', '2'), ('scale', 'True'), ('max_iter', '500'), ('tol', '1e-06'), ('copy', 'True')]",CCA,http://scikit-learn.org/stable/modules/generated/sklearn.cross_decomposition.CCA.html#sklearn.cross_decomposition.CCA,sklearn.cross_decomposition,Cross decomposition
145,"['n_components', 'scale', 'copy']","['n_components : int, default 2', 'scale : boolean, default True', 'copy : boolean, default True']","[""<type 'int'>"", ""<type 'bool'>"", ""<type 'bool'>""]","n_components=2, scale=True, copy=True","[('n_components', '2'), ('scale', 'True'), ('copy', 'True')]",PLSSVD,http://scikit-learn.org/stable/modules/generated/sklearn.cross_decomposition.PLSSVD.html#sklearn.cross_decomposition.PLSSVD,sklearn.cross_decomposition,Cross decomposition
146,['steps'],['steps : list'],"[""<type 'list'>""]",steps=None,"[('steps', None)]",Pipeline,http://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pipeline,sklearn.pipeline,Pipeline
147,"['transformer_list: list of (string, transformer) tuples', 'n_jobs: int, optional', 'transformer_weights: dict, optional']","['transformer_list: list of (string, transformer) tuples :', 'n_jobs: int, optional :', 'transformer_weights: dict, optional :']","[""[<type 'str'>, <class 'sklearn.base.TransformerMixin'>]"", ""<type 'int'>"", ""<type 'dict'>""]","transformer_list=None, n_jobs=1, transformer_weights=None","[('transformer_list', None), ('n_jobs', '1'), ('transformer_weights', 'None')]",FeatureUnion,http://scikit-learn.org/stable/modules/generated/sklearn.pipeline.FeatureUnion.html#sklearn.pipeline.FeatureUnion,sklearn.pipeline,Pipeline
148,"['threshold', 'copy']","['threshold : float, optional (0.0 by default)', 'copy : boolean, optional, default True']","[""<type 'float'>"", ""<type 'bool'>""]","threshold=0.0, copy=True","[('threshold', '0.0'), ('copy', 'True')]",Binarizer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.Binarizer.html#sklearn.preprocessing.Binarizer,sklearn.preprocessing,Preprocessing and Normalization
149,"['func', 'validate', 'accept_sparse', 'pass_y: bool, optional default=False']","['func : callable, optional default=None', 'validate : bool, optional default=True', 'accept_sparse : boolean, optional', 'pass_y: bool, optional default=False :']","['<built-in function callable>', ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","func=None, validate=True, accept_sparse=False, pass_y=False","[('func', 'None'), ('validate', 'True'), ('accept_sparse', 'False'), ('pass_y', 'False')]",FunctionTransformer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.FunctionTransformer.html#sklearn.preprocessing.FunctionTransformer,sklearn.preprocessing,Preprocessing and Normalization
150,"['missing_values', 'strategy', 'axis', 'verbose', 'copy']","[""missing_values : integer or 'NaN', optional (default='NaN')"", ""strategy : string, optional (default='mean')"", 'axis : integer, optional (default=0)', 'verbose : integer, optional (default=0)', 'copy : boolean, optional (default=True)']","[""<type 'int'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'bool'>""]","missing_values='NaN', strategy='mean', axis=0, verbose=0, copy=True","[('missing_values', ""'NaN'""), ('strategy', ""'mean'""), ('axis', '0'), ('verbose', '0'), ('copy', 'True')]",Imputer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.Imputer.html#sklearn.preprocessing.Imputer,sklearn.preprocessing,Preprocessing and Normalization
151,['K'],"['K : numpy array of shape [n_samples, n_samples]']","[""<type 'numpy.ndarray'>""]",,[],KernelCenterer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.KernelCenterer.html#sklearn.preprocessing.KernelCenterer,sklearn.preprocessing,Preprocessing and Normalization
152,"['neg_label', 'pos_label', 'sparse_output']","['neg_label : int (default: 0)', 'pos_label : int (default: 1)', 'sparse_output : boolean (default: False)']","[""<type 'int'>"", ""<type 'int'>"", ""<type 'bool'>""]","neg_label=0, pos_label=1, sparse_output=False","[('neg_label', '0'), ('pos_label', '1'), ('sparse_output', 'False')]",LabelBinarizer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelBinarizer.html#sklearn.preprocessing.LabelBinarizer,sklearn.preprocessing,Preprocessing and Normalization
153,['y'],"['y : array-like of shape (n_samples,)']","[""<type 'numpy.ndarray'>""]",,[],LabelEncoder,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html#sklearn.preprocessing.LabelEncoder,sklearn.preprocessing,Preprocessing and Normalization
154,"['classes', 'sparse_output']","['classes : array-like of shape [n_classes] (optional)', 'sparse_output : boolean (default: False),']","[""<type 'numpy.ndarray'>"", ""<type 'bool'>""]","classes=None, sparse_output=False","[('classes', 'None'), ('sparse_output', 'False')]",MultiLabelBinarizer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MultiLabelBinarizer.html#sklearn.preprocessing.MultiLabelBinarizer,sklearn.preprocessing,Preprocessing and Normalization
155,['copy'],"['copy : boolean, optional, default is True']","[""<type 'bool'>""]",copy=True,"[('copy', 'True')]",MaxAbsScaler,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MaxAbsScaler.html#sklearn.preprocessing.MaxAbsScaler,sklearn.preprocessing,Preprocessing and Normalization
156,"['feature_range: tuple (min, max), default=(0, 1)', 'copy']","['feature_range: tuple (min, max), default=(0, 1) :', 'copy : boolean, optional, default True']","[""<type 'tuple'>"", ""<type 'bool'>""]","feature_range=(0, 1)=None, copy=True","[('feature_range', '(0'), ('1)', None), ('copy', 'True')]",MinMaxScaler,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html#sklearn.preprocessing.MinMaxScaler,sklearn.preprocessing,Preprocessing and Normalization
157,"['norm', 'copy']","[""norm : 'l1', 'l2', or 'max', optional ('l2' by default)"", 'copy : boolean, optional, default True']","[None, ""<type 'bool'>""]","norm='l2', copy=True","[('norm', ""'l2'""), ('copy', 'True')]",Normalizer,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.Normalizer.html#sklearn.preprocessing.Normalizer,sklearn.preprocessing,Preprocessing and Normalization
158,"['n_values', ""categorical_features: 'all' or array of indices or mask"", 'dtype', 'sparse', 'handle_unknown']","[""n_values : 'auto', int or array of ints"", ""categorical_features: 'all' or array of indices or mask :"", 'dtype : number type, default=np.float', 'sparse : boolean, default=True', ""handle_unknown : str, 'error' or 'ignore'""]","[""<type 'numpy.ndarray'>"", ""<type 'numpy.ndarray'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'str'>""]","n_values='auto', categorical_features='all', dtype=<class 'float'>, sparse=True, handle_unknown='error'","[('n_values', ""'auto'""), ('categorical_features', ""'all'""), ('dtype', ""<class 'float'>""), ('sparse', 'True'), ('handle_unknown', ""'error'"")]",OneHotEncoder,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html#sklearn.preprocessing.OneHotEncoder,sklearn.preprocessing,Preprocessing and Normalization
159,"['degree', 'interaction_only', 'include_bias']","['degree : integer', 'interaction_only : boolean, default = False', 'include_bias : boolean']","[""<type 'int'>"", ""<type 'bool'>"", ""<type 'bool'>""]","degree=2, interaction_only=False, include_bias=True","[('degree', '2'), ('interaction_only', 'False'), ('include_bias', 'True')]",PolynomialFeatures,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.PolynomialFeatures.html#sklearn.preprocessing.PolynomialFeatures,sklearn.preprocessing,Preprocessing and Normalization
160,"['with_centering', 'with_scaling', 'copy']","['with_centering : boolean, True by default', 'with_scaling : boolean, True by default', 'copy : boolean, optional, default is True']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","with_centering=True, with_scaling=True, copy=True","[('with_centering', 'True'), ('with_scaling', 'True'), ('copy', 'True')]",RobustScaler,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html#sklearn.preprocessing.RobustScaler,sklearn.preprocessing,Preprocessing and Normalization
161,"['with_mean', 'with_std', 'copy']","['with_mean : boolean, True by default', 'with_std : boolean, True by default', 'copy : boolean, optional, default True']","[""<type 'bool'>"", ""<type 'bool'>"", ""<type 'bool'>""]","copy=True, with_mean=True, with_std=True","[('copy', 'True'), ('with_mean', 'True'), ('with_std', 'True')]",StandardScaler,http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html#sklearn.preprocessing.StandardScaler,sklearn.preprocessing,Preprocessing and Normalization
162,"['n_components', 'eps', 'random_state']","[""n_components : int or 'auto', optional (default = 'auto')"", 'eps : strictly positive float, optional (default=0.1)', 'random_state : integer, RandomState instance or None (default=None)']","[""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","n_components='auto', eps=0.1, random_state=None","[('n_components', ""'auto'""), ('eps', '0.1'), ('random_state', 'None')]",GaussianRandomProjection,http://scikit-learn.org/stable/modules/generated/sklearn.random_projection.GaussianRandomProjection.html#sklearn.random_projection.GaussianRandomProjection,sklearn.random_projection,Random projection
163,"['n_components', 'density', 'eps', 'dense_output', 'random_state']","[""n_components : int or 'auto', optional (default = 'auto')"", ""density : float in range ]0, 1], optional (default='auto')"", 'eps : strictly positive float, optional, (default=0.1)', 'dense_output : boolean, optional (default=False)', 'random_state : integer, RandomState instance or None (default=None)']","[""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","n_components='auto', density='auto', eps=0.1, dense_output=False, random_state=None","[('n_components', ""'auto'""), ('density', ""'auto'""), ('eps', '0.1'), ('dense_output', 'False'), ('random_state', 'None')]",SparseRandomProjection,http://scikit-learn.org/stable/modules/generated/sklearn.random_projection.SparseRandomProjection.html#sklearn.random_projection.SparseRandomProjection,sklearn.random_projection,Random projection
164,"['kernel', 'gamma', 'n_neighbors', 'alpha', 'max_iter', 'tol']","[""kernel : {'knn', 'rbf'}"", 'gamma : float', 'n_neighbors : integer > 0', 'alpha : float', 'max_iter : float', 'tol : float']","[None, ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>""]","kernel='rbf', gamma=20, n_neighbors=7, alpha=1, max_iter=30, tol=0.001","[('kernel', ""'rbf'""), ('gamma', '20'), ('n_neighbors', '7'), ('alpha', '1'), ('max_iter', '30'), ('tol', '0.001')]",LabelPropagation,http://scikit-learn.org/stable/modules/generated/sklearn.semi_supervised.LabelPropagation.html#sklearn.semi_supervised.LabelPropagation,sklearn.semi_supervised,Semi-Supervised Learning
165,"['kernel', 'gamma', 'n_neighbors', 'alpha', 'max_iter', 'tol']","[""kernel : {'knn', 'rbf'}"", 'gamma : float', 'n_neighbors : integer > 0', 'alpha : float', 'max_iter : float', 'tol : float']","[None, ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>""]","kernel='rbf', gamma=20, n_neighbors=7, alpha=0.2, max_iter=30, tol=0.001","[('kernel', ""'rbf'""), ('gamma', '20'), ('n_neighbors', '7'), ('alpha', '0.2'), ('max_iter', '30'), ('tol', '0.001')]",LabelSpreading,http://scikit-learn.org/stable/modules/generated/sklearn.semi_supervised.LabelSpreading.html#sklearn.semi_supervised.LabelSpreading,sklearn.semi_supervised,Semi-Supervised Learning
166,"['C', 'kernel', 'degree', 'gamma', 'coef0', 'probability', 'shrinking', 'tol', 'cache_size', 'class_weight', 'verbose', 'max_iter', 'decision_function_shape', 'random_state']","['C : float, optional (default=1.0)', ""kernel : string, optional (default='rbf')"", 'degree : int, optional (default=3)', ""gamma : float, optional (default='auto')"", 'coef0 : float, optional (default=0.0)', 'probability : boolean, optional (default=False)', 'shrinking : boolean, optional (default=True)', 'tol : float, optional (default=1e-3)', 'cache_size : float, optional', ""class_weight : {dict, 'balanced'}, optional"", 'verbose : bool, default: False', 'max_iter : int, optional (default=-1)', ""decision_function_shape : 'ovo', 'ovr' or None, default=None"", 'random_state : int seed, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'bool'>"", ""<type 'int'>"", None, ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","C=1.0, kernel='rbf', degree=3, gamma='auto', coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape=None, random_state=None","[('C', '1.0'), ('kernel', ""'rbf'""), ('degree', '3'), ('gamma', ""'auto'""), ('coef0', '0.0'), ('shrinking', 'True'), ('probability', 'False'), ('tol', '0.001'), ('cache_size', '200'), ('class_weight', 'None'), ('verbose', 'False'), ('max_iter', '-1'), ('decision_function_shape', 'None'), ('random_state', 'None')]",SVC,http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC,sklearn.svm,Support Vector Machines
167,"['C', 'loss', 'penalty', 'dual', 'tol', ""multi_class: string, 'ovr' or 'crammer_singer' (default='ovr')"", 'fit_intercept', 'intercept_scaling', 'class_weight', 'verbose', 'random_state', 'max_iter']","['C : float, optional (default=1.0)', ""loss : string, 'hinge' or 'squared_hinge' (default='squared_hinge')"", ""penalty : string, 'l1' or 'l2' (default='l2')"", 'dual : bool, (default=True)', 'tol : float, optional (default=1e-4)', ""multi_class: string, 'ovr' or 'crammer_singer' (default='ovr') :"", 'fit_intercept : boolean, optional (default=True)', 'intercept_scaling : float, optional (default=1)', ""class_weight : {dict, 'balanced'}, optional"", 'verbose : int, (default=0)', 'random_state : int seed, RandomState instance, or None (default=None)', 'max_iter : int, (default=1000)']","[""<type 'float'>"", ""<type 'str'>"", ""<type 'str'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'str'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>""]","penalty='l2', loss='squared_hinge', dual=True, tol=0.0001, C=1.0, multi_class='ovr', fit_intercept=True, intercept_scaling=1, class_weight=None, verbose=0, random_state=None, max_iter=1000","[('penalty', ""'l2'""), ('loss', ""'squared_hinge'""), ('dual', 'True'), ('tol', '0.0001'), ('C', '1.0'), ('multi_class', ""'ovr'""), ('fit_intercept', 'True'), ('intercept_scaling', '1'), ('class_weight', 'None'), ('verbose', '0'), ('random_state', 'None'), ('max_iter', '1000')]",LinearSVC,http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC,sklearn.svm,Support Vector Machines
168,"['nu', 'kernel', 'degree', 'gamma', 'coef0', 'probability', 'shrinking', 'tol', 'cache_size', 'class_weight', 'verbose', 'max_iter', 'decision_function_shape', 'random_state']","['nu : float, optional (default=0.5)', ""kernel : string, optional (default='rbf')"", 'degree : int, optional (default=3)', ""gamma : float, optional (default='auto')"", 'coef0 : float, optional (default=0.0)', 'probability : boolean, optional (default=False)', 'shrinking : boolean, optional (default=True)', 'tol : float, optional (default=1e-3)', 'cache_size : float, optional', ""class_weight : {dict, 'auto'}, optional"", 'verbose : bool, default: False', 'max_iter : int, optional (default=-1)', ""decision_function_shape : 'ovo', 'ovr' or None, default=None"", 'random_state : int seed, RandomState instance, or None (default)']","[""<type 'float'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'dict'>"", ""<type 'bool'>"", ""<type 'int'>"", None, ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","nu=0.5, kernel='rbf', degree=3, gamma='auto', coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape=None, random_state=None","[('nu', '0.5'), ('kernel', ""'rbf'""), ('degree', '3'), ('gamma', ""'auto'""), ('coef0', '0.0'), ('shrinking', 'True'), ('probability', 'False'), ('tol', '0.001'), ('cache_size', '200'), ('class_weight', 'None'), ('verbose', 'False'), ('max_iter', '-1'), ('decision_function_shape', 'None'), ('random_state', 'None')]",NuSVC,http://scikit-learn.org/stable/modules/generated/sklearn.svm.NuSVC.html#sklearn.svm.NuSVC,sklearn.svm,Support Vector Machines
169,"['C', 'epsilon', 'kernel', 'degree', 'gamma', 'coef0', 'shrinking', 'tol', 'cache_size', 'verbose', 'max_iter']","['C : float, optional (default=1.0)', 'epsilon : float, optional (default=0.1)', ""kernel : string, optional (default='rbf')"", 'degree : int, optional (default=3)', ""gamma : float, optional (default='auto')"", 'coef0 : float, optional (default=0.0)', 'shrinking : boolean, optional (default=True)', 'tol : float, optional (default=1e-3)', 'cache_size : float, optional', 'verbose : bool, default: False', 'max_iter : int, optional (default=-1)']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>""]","kernel='rbf', degree=3, gamma='auto', coef0=0.0, tol=0.001, C=1.0, epsilon=0.1, shrinking=True, cache_size=200, verbose=False, max_iter=-1","[('kernel', ""'rbf'""), ('degree', '3'), ('gamma', ""'auto'""), ('coef0', '0.0'), ('tol', '0.001'), ('C', '1.0'), ('epsilon', '0.1'), ('shrinking', 'True'), ('cache_size', '200'), ('verbose', 'False'), ('max_iter', '-1')]",SVR,http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html#sklearn.svm.SVR,sklearn.svm,Support Vector Machines
170,"['C', 'loss', 'epsilon', 'dual', 'tol', 'fit_intercept', 'intercept_scaling', 'verbose', 'random_state', 'max_iter']","['C : float, optional (default=1.0)', ""loss : string, 'epsilon_insensitive' or 'squared_epsilon_insensitive' (default='epsilon_insensitive')"", 'epsilon : float, optional (default=0.1)', 'dual : bool, (default=True)', 'tol : float, optional (default=1e-4)', 'fit_intercept : boolean, optional (default=True)', 'intercept_scaling : float, optional (default=1)', 'verbose : int, (default=0)', 'random_state : int seed, RandomState instance, or None (default=None)', 'max_iter : int, (default=1000)']","[""<type 'float'>"", ""<type 'str'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'int'>""]","epsilon=0.0, tol=0.0001, C=1.0, loss='epsilon_insensitive', fit_intercept=True, intercept_scaling=1.0, dual=True, verbose=0, random_state=None, max_iter=1000","[('epsilon', '0.0'), ('tol', '0.0001'), ('C', '1.0'), ('loss', ""'epsilon_insensitive'""), ('fit_intercept', 'True'), ('intercept_scaling', '1.0'), ('dual', 'True'), ('verbose', '0'), ('random_state', 'None'), ('max_iter', '1000')]",LinearSVR,http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVR.html#sklearn.svm.LinearSVR,sklearn.svm,Support Vector Machines
171,"['C', 'nu', 'kernel', 'degree', 'gamma', 'coef0', 'shrinking', 'tol', 'cache_size', 'verbose', 'max_iter']","['C : float, optional (default=1.0)', 'nu : float, optional', ""kernel : string, optional (default='rbf')"", 'degree : int, optional (default=3)', ""gamma : float, optional (default='auto')"", 'coef0 : float, optional (default=0.0)', 'shrinking : boolean, optional (default=True)', 'tol : float, optional (default=1e-3)', 'cache_size : float, optional', 'verbose : bool, default: False', 'max_iter : int, optional (default=-1)']","[""<type 'float'>"", ""<type 'float'>"", ""<type 'str'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>""]","nu=0.5, C=1.0, kernel='rbf', degree=3, gamma='auto', coef0=0.0, shrinking=True, tol=0.001, cache_size=200, verbose=False, max_iter=-1","[('nu', '0.5'), ('C', '1.0'), ('kernel', ""'rbf'""), ('degree', '3'), ('gamma', ""'auto'""), ('coef0', '0.0'), ('shrinking', 'True'), ('tol', '0.001'), ('cache_size', '200'), ('verbose', 'False'), ('max_iter', '-1')]",NuSVR,http://scikit-learn.org/stable/modules/generated/sklearn.svm.NuSVR.html#sklearn.svm.NuSVR,sklearn.svm,Support Vector Machines
172,"['kernel', 'nu', 'degree', 'gamma', 'coef0', 'tol', 'shrinking', 'cache_size', 'verbose', 'max_iter', 'random_state']","[""kernel : string, optional (default='rbf')"", 'nu : float, optional', 'degree : int, optional (default=3)', ""gamma : float, optional (default='auto')"", 'coef0 : float, optional (default=0.0)', 'tol : float, optional', 'shrinking : boolean, optional', 'cache_size : float, optional', 'verbose : bool, default: False', 'max_iter : int, optional (default=-1)', 'random_state : int seed, RandomState instance, or None (default)']","[""<type 'str'>"", ""<type 'float'>"", ""<type 'int'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'float'>"", ""<type 'bool'>"", ""<type 'int'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)""]","kernel='rbf', degree=3, gamma='auto', coef0=0.0, tol=0.001, nu=0.5, shrinking=True, cache_size=200, verbose=False, max_iter=-1, random_state=None","[('kernel', ""'rbf'""), ('degree', '3'), ('gamma', ""'auto'""), ('coef0', '0.0'), ('tol', '0.001'), ('nu', '0.5'), ('shrinking', 'True'), ('cache_size', '200'), ('verbose', 'False'), ('max_iter', '-1'), ('random_state', 'None')]",OneClassSVM,http://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html#sklearn.svm.OneClassSVM,sklearn.svm,Support Vector Machines
173,"['criterion', 'splitter', 'max_features', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'class_weight', 'random_state', 'presort']","[""criterion : string, optional (default='gini')"", ""splitter : string, optional (default='best')"", 'max_features : int, float, string or None, optional (default=None)', 'max_depth : int or None, optional (default=None)', 'min_samples_split : int, optional (default=2)', 'min_samples_leaf : int, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', ""class_weight : dict, list of dicts, 'balanced' or None, optional (default=None)"", 'random_state : int, RandomState instance or None, optional (default=None)', 'presort : bool, optional (default=False)']","[""<type 'str'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'dict'>"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'bool'>""]","criterion='gini', splitter='best', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=None, random_state=None, max_leaf_nodes=None, class_weight=None, presort=False","[('criterion', ""'gini'""), ('splitter', ""'best'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', 'None'), ('random_state', 'None'), ('max_leaf_nodes', 'None'), ('class_weight', 'None'), ('presort', 'False')]",DecisionTreeClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier,sklearn.tree,Decision Trees
174,"['criterion', 'splitter', 'max_features', 'max_depth', 'min_samples_split', 'min_samples_leaf', 'min_weight_fraction_leaf', 'max_leaf_nodes', 'random_state', 'presort']","[""criterion : string, optional (default='mse')"", ""splitter : string, optional (default='best')"", 'max_features : int, float, string or None, optional (default=None)', 'max_depth : int or None, optional (default=None)', 'min_samples_split : int, optional (default=2)', 'min_samples_leaf : int, optional (default=1)', 'min_weight_fraction_leaf : float, optional (default=0.)', 'max_leaf_nodes : int or None, optional (default=None)', 'random_state : int, RandomState instance or None, optional (default=None)', 'presort : bool, optional (default=False)']","[""<type 'str'>"", ""<type 'str'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""<type 'int'>"", ""<type 'int'>"", ""<type 'float'>"", ""(<type 'int'>, None)"", ""(<type 'int'>, None, <type 'mtrand.RandomState'>)"", ""<type 'bool'>""]","criterion='mse', splitter='best', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=None, random_state=None, max_leaf_nodes=None, presort=False","[('criterion', ""'mse'""), ('splitter', ""'best'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', 'None'), ('random_state', 'None'), ('max_leaf_nodes', 'None'), ('presort', 'False')]",DecisionTreeRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeRegressor.html#sklearn.tree.DecisionTreeRegressor,sklearn.tree,Decision Trees
175,"['X', 'check_input']","['X : array_like or sparse matrix, shape = [n_samples, n_features]', 'check_input : boolean, (default=True)']","[""<type 'numpy.ndarray'>"", ""<type 'bool'>""]","criterion='gini', splitter='random', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', random_state=None, max_leaf_nodes=None, class_weight=None","[('criterion', ""'gini'""), ('splitter', ""'random'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', ""'auto'""), ('random_state', 'None'), ('max_leaf_nodes', 'None'), ('class_weight', 'None')]",ExtraTreeClassifier,http://scikit-learn.org/stable/modules/generated/sklearn.tree.ExtraTreeClassifier.html#sklearn.tree.ExtraTreeClassifier,sklearn.tree,Decision Trees
176,"['X', 'check_input']","['X : array_like or sparse matrix, shape = [n_samples, n_features]', 'check_input : boolean, (default=True)']","[""<type 'numpy.ndarray'>"", ""<type 'bool'>""]","criterion='mse', splitter='random', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', random_state=None, max_leaf_nodes=None","[('criterion', ""'mse'""), ('splitter', ""'random'""), ('max_depth', 'None'), ('min_samples_split', '2'), ('min_samples_leaf', '1'), ('min_weight_fraction_leaf', '0.0'), ('max_features', ""'auto'""), ('random_state', 'None'), ('max_leaf_nodes', 'None')]",ExtraTreeRegressor,http://scikit-learn.org/stable/modules/generated/sklearn.tree.ExtraTreeRegressor.html#sklearn.tree.ExtraTreeRegressor,sklearn.tree,Decision Trees
