from ._base.RobustScaler import RobustScaler_UI, RobustScaler_Model, RobustScaler_View
from calculations._core.ABCs import ABCSeriesToSeries
from sklearn.preprocessing import RobustScaler
from pandas import Series



class SeriesRobustScaler_UI(RobustScaler_UI):
    
    pass



class SeriesRobustScaler_Model(ABCSeriesToSeries,
                               RobustScaler_Model):


    calc_name = 'Robust Scaler'
    
    
    def setInputs(self, series):    
        
        self._series = series
        self.uiModel = SeriesRobustScaler_UI()
        

    def getOutputs(self):
        
        try:

            # Assign local variables
            args = self.getArgs()
            scaler = RobustScaler(** args)
            scaled_values = scaler.fit_transform(
                                self._series.reshape(-1, 1)
                                ).squeeze()
            series = Series(scaled_values,
                            index = self._series.index,
                            name = self._series.name + '_scaled')

            return {'series': series}

        except Exception as e:

            return self.standard_exception(e)



enamldef SeriesRobustScaler_View(RobustScaler_View):
    
    pass