# Atom
from atom.api import Atom, Value

# Enaml
from enaml.widgets.api import Form, GroupBox, Label

# Models
from ._base.MaxAbsScaler import MaxAbsScaler_UI, MaxAbsScaler_View
from calculations._core.ABCs import ABCDataFrameToDataFrame
from custom_views.CheckBoxList import CheckBoxList_Model, CheckBoxList_View
from sklearn.preprocessing import MaxAbsScaler
from pandas import Series



class DataFrameMaxAbsScaler_UI(MaxAbsScaler_UI):

    # columns
    columns = Value(Atom)
    columns_tooltip = 'Select the columns to scale.'



class DataFrameMaxAbsScaler_Model(ABCDataFrameToDataFrame):


    calc_name = 'Max Abs Scaler'


    def setInputs(self, dataframe):

        self._dataframe = dataframe
        numeric_cols = dataframe.select_dtypes(['number']).columns
        self.columns = CheckBoxList_Model(numeric_cols)
        self.uiModel = DataFrameMaxAbsScaler_UI(columns = self.columns.uiModel)


    def getOutputs(self):

        df = self._dataframe
        columns = self.columns.checked_item_names()
        encoder = MaxAbsScaler()
        for column in columns:
            series = df[column]
            df[column + '_scaled'] = Series(
                            encoder.fit_transform(
                                series.reshape(-1, 1)
                                ).squeeze(), 
                            index = series.index,
                            name = series.name + '_scaled'
                            )
        
        return {'dataframe': df}



enamldef DataFrameMaxAbsScaler_View(MaxAbsScaler_View): me:
    
    
    attr model


    Form:

        Label:
            text = 'Columns'
            tool_tip = model.columns_tooltip
        CheckBoxList_View:
            model:= me.model.columns
            tool_tip = me.model.columns_tooltip
    