# Atom
from atom.api import Atom, Bool, Int


# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, Notebook, Page
from custom_views.fields import IntField

# Models
from ._base.ClassificationGenerator import NumericClassificationGenerator
from sklearn.datasets import make_hastie_10_2



class MakeHastie_10_2_Model(NumericClassificationGenerator):


    calc_name = 'Make Hastie 10 2'


    class ui(Atom):

        # n_samples
        n_samples = Int(12000)
        n_samples_min = Int(1)
        n_samples_tooltip = 'The total number of points equally divided among classes.'
        # random_state
        random_state = Int(1)
        use_random_state = Bool(True)
        random_state_tooltip = 'The random state seed.'


    def __init__(self):
        
        self.uiModel = MakeHastie_10_2_Model.ui()
        self.outputFunction = make_hastie_10_2


    def getArgs(self):
        
        return {
            'n_samples': self.uiModel.n_samples,
            'random_state': (None 
                             if not self.uiModel.use_random_state 
                             else self.uiModel.random_state)
            }



enamldef MakeHastie_10_2_View(GroupBox): me:

    attr model

    Form:

        Label:
            text = '# Samples'
            tool_tip = model.n_samples_tooltip
        IntField:
            value := model.n_samples
            minimum = model.n_samples_min
            tool_tip = model.n_samples_tooltip

        CheckBox:
            tool_tip = model.random_state_tooltip
            text = 'Random State'
            checked := model.use_random_state
        Label:
            text = 'N/A'
            visible << not model.use_random_state
        IntField:
            value := model.random_state
            visible << model.use_random_state
            tool_tip = model.random_state_tooltip