# Models
from calculations._core.ABCs import ABCDataFrameToDataFrame
from ._base.RollingCount import RollingCount_UI
from ._base.RollingCount import RollingCount_Model, RollingCount_View

# Pandas
import pandas as pd
from pandas import DataFrame, Series, concat
from pandas.stats.moments import rolling_count



class DataFrame_RollingCount_Model(ABCDataFrameToDataFrame, RollingCount_Model):
    
    
    calc_name = 'Rolling Count'
    

    def setInputs(self, dataframe):

        self._dataframe = dataframe
        self.uiModel = RollingCount_UI()


    def getOutputs(self):

        try:

            # Assign local variables
            args = self.getArgs()
            args['arg'] = df_numeric
                
            # apply function
            rolling_stat = rolling_count(** args)
            
            df_joined = concat([df_object, rolling_stat], axis = 1)
            df_joined = df_joined[[col for col in self._dataframe.columns]]
            return {'dataframe': df_joined}                

        except Exception as e:

            return self.standard_exception(e)



enamldef DataFrame_RollingCount_View(RollingCount_View):

    pass