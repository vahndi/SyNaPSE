# Atom
from atom.api import Atom, Bool, List, Str

# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, ObjectCombo

# Models
from calculations._core.ABCs import ABCDataFrameToSeries



class Statistic1_UI(Atom):

    # axis
    axis = Str('index')
    axis_list = List(str, ['index', 'columns'])
    axis_tooltip = 'The axis over which the calculation should be applied.'
    # skipna
    skipna = Bool(False)
    skipna_tooltip = ('Exclude NA/null values. If an entire row/column ' + 
                      'is NA, the result will be NA')
    # numeric_only
    numeric_only = Bool(True)
    numeric_only_tooltip = ('Include only float, int, boolean data.\n' +
                            'If False, will attempt to use everything, ' +
                            'then use only numeric data.')
        

class Statistic1_Model(ABCDataFrameToSeries):


    def setInputs(self, dataframe):

        self._dataframe = dataframe
        self.uiModel = Statistic1_UI()
        

    def getOutputs(self):
        
        try:
            
            args = {'axis': self.uiModel.axis,
                    'skipna': self.uiModel.skipna,
                    'numeric_only': self.uiModel.numeric_only}

            # apply function
            func = getattr(self._dataframe, self.outputFunction)
            series = func(** args)
            series.index.name = self.uiModel.axis
            series.name = self.calc_name.lower()
            
            return {'series': series}    

        except Exception as e:
            
            return self.standard_exception(e)



enamldef Statistic1_View(GroupBox):

    attr model

    Form:

        Label:
            text = 'Axis'
            tool_tip = model.axis_tooltip
        ObjectCombo:
            items = model.axis_list
            selected := model.axis
            tool_tip = model.axis_tooltip
            
        Label:
            text = 'Skip NA / Null Values'
            tool_tip = model.skipna_tooltip
        CheckBox:
            checked := model.skipna
            tool_tip = model.skipna_tooltip

        Label:
            text = 'Numeric Only'
            tool_tip = model.numeric_only_tooltip
        CheckBox:
            checked := model.numeric_only
            tool_tip = model.numeric_only_tooltip
            
