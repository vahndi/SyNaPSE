# Atom
from atom.api import Atom, Bool, List, Str

# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, ObjectCombo

# Models
from calculations._core.ABCs import ABCSeriesToFloat



class Series_Statistic1_UI(Atom):


    # skipna
    skipna = Bool(False)
    skipna_tooltip = ('Exclude NA/null values. If an entire row/column ' + 
                      'is NA, the result will be NA')
    # numeric_only
    numeric_only = Bool(True)
    numeric_only_tooltip = ('Include only float, int, boolean data.\n' +
                            'If False, will attempt to use everything, ' +
                            'then use only numeric data.')
        

class Series_Statistic1_Model(ABCSeriesToFloat):


    def setInputs(self, series):

        self._series = series
        self.uiModel = Series_Statistic1_UI()


    def getOutputs(self):
        
        try:
            
            args = {'skipna': self.uiModel.skipna,
                    'numeric_only': self.uiModel.numeric_only}

            # apply function
            func = getattr(self._series, self.outputFunction)
            series = func(** args)
            
            return {'series': series}    

        except Exception as e:
            
            return self.standard_exception(e)



enamldef Series_Statistic1_View(GroupBox):


    attr model


    Form:
            
        Label:
            text = 'Skip NA / Null Values'
            tool_tip = model.skipna_tooltip
        CheckBox:
            checked := model.skipna
            tool_tip = model.skipna_tooltip

        Label:
            text = 'Numeric Only'
            tool_tip = model.numeric_only_tooltip
        CheckBox:
            checked := model.numeric_only
            tool_tip = model.numeric_only_tooltip
            
