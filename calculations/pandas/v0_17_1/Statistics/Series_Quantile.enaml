# Atom
from atom.api import Atom, Bool, Float, List, Str

# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, Notebook, ObjectCombo, Page
from custom_views.fields import Field

# Models
from calculations._core.ABCs import ABCSeriesToFloat

import re
from pandas import Series



class Series_Quantile_UI(Atom):

    # axis
    axis = Str('index')
    axis_list = List(str, ['index', 'columns'])
    axis_tooltip = 'The axis over which the calculation should be applied.'
    # quantile
    quantile = Float('0.5')
    quantile_tooltip = ('The quantile to calculate.\n' +
                         'Enter either a single value between 0 and 1.')
    # numeric_only
    numeric_only = Bool(True)



class Series_Quantile_Model(ABCSeriesToFloat):


    calc_name = 'Quantile'


    def setInputs(self, series):

        self._series = series
        self.uiModel = Series_Quantile_UI()


    def getOutputs(self):

        try:

            # Assign local variables
            args = {
                'q': self.uiModel.quantile,
                'numeric_only': self.uiModel.numeric_only
                }
            
            quantile = self._series.quantile(** args)
            
            return {'float': series}

        except Exception as e:

            return self.standard_exception(e)



enamldef Series_Quantile_View(GroupBox):

    attr model

    Form:

        Label:
            text = 'Quantiles'
            tool_tip = model.quantiles_tooltip
        Field:
            text := model.quantiles
            tool_tip = model.quantiles_tooltip

        Label:
            text = 'Numeric Only'
        CheckBox:
            checked := model.numeric_only