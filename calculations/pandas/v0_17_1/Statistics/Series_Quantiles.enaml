# Atom
from atom.api import Atom, Bool, List, Str

# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, Notebook, ObjectCombo, Page
from custom_views.fields import Field

# Models
from calculations._core.ABCs import ABCSeriesToSeries

import re
from pandas import Series



class Series_Quantiles_UI(Atom):


    # quantiles
    quantiles = Str('0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9')
    quantiles_tooltip = ('The quantiles to calculate.\n' +
                         'Enter a list of values, separated by commas.\n' + 
                         'Values should be between 0 and 1.')
    # numeric_only
    numeric_only = Bool(True)
        


class Series_Quantiles_Model(ABCSeriesToSeries):


    calc_name = 'Quantiles'


    def setInputs(self, series):

        self._series = series
        self.uiModel = Series_Quantiles_UI()


    def getOutputs(self):

        def getQuantiles(str_quantiles):
            try:
                quantiles = [float(q) for q in re.split('\s*,\s*', 
                                                        str_quantiles)]
            except:
                quantiles = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
            return quantiles

        try:

            # Assign local variables
            args = {
                'q': getQuantiles(self.uiModel.quantiles),
                'numeric_only': self.uiModel.numeric_only
                }
            
            quantiles = self._series.quantile(** args)
            return {'series': quantiles}


        except Exception as e:

            return self.standard_exception(e)



enamldef Series_Quantiles_View(GroupBox):

    attr model

    Form:

        Label:
            text = 'Quantiles'
            tool_tip = model.quantiles_tooltip
        Field:
            text := model.quantiles
            tool_tip = model.quantiles_tooltip

        Label:
            text = 'Numeric Only'
        CheckBox:
            checked := model.numeric_only