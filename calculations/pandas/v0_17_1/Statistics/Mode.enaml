# Atom
from atom.api import Atom, Bool, List, Str


# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, Notebook, ObjectCombo, Page

# Models
from flow_elements.core.ABCs import ABCDataFrameToDataFrame



class Mode_Model(ABCDataFrameToDataFrame):


    calc_name = 'Mode'


    class ui(Atom):

        # axis
        axis = Str('index')
        axis_list = List(str, ['index', 'columns'])
        axis_tooltip = 'The axis over which the calculation should be applied.'
        # numeric_only
        numeric_only = Bool()
        numeric_only_tooltip = 'If True, only apply to numeric columns.'


    def setInputs(self, dataframe):

        self._dataframe = dataframe
        self.uiModel = Mode_Model.ui()


    def getOutputs(self):

        try:

            # Assign local variables
            args = {
                'axis': self.uiModel.axis,
                'numeric_only': self.uiModel.numeric_only
                }
            
            dataframe = self._dataframe.mode(**args)
            
            return {'dataframe': dataframe}

        except Exception as e:

            return self.standard_exception(e)



enamldef Mode_View(GroupBox): me:

    attr model

    Form:

        Label:
            text = 'Axis'
            tool_tip = model.axis_tooltip
        ObjectCombo:
            items = model.axis_list
            selected := model.axis
            tool_tip = model.axis_tooltip

        Label:
            text = 'Numeric Only'
            tool_tip = model.numeric_only_tooltip
        CheckBox:
            checked := model.numeric_only
            tool_tip = model.numeric_only_tooltip