# Atom
from atom.api import Atom, Bool, List, Str

# Enaml
from enaml.widgets.api import CheckBox, Form, GroupBox, Label, ObjectCombo

# Models
from calculations._core.ABCs import ABCSeriesToSeries

from pandas import expanding_count
from modules.pandas_helpers import pandas_freqs, pandas_freq_tooltip



class SeriesExpandingCount_UI(Atom):

    # freq
    freq = Str('D')
    freq_list = List(str, pandas_freqs)
    use_freq = Bool()
    freq_tooltip = pandas_freq_tooltip



class SeriesExpandingCount_Model(ABCSeriesToSeries):


    calc_name = 'Expanding Count'


    def setInputs(self, series):

        self._series = series
        self.uiModel = SeriesExpandingCount_UI()


    def getOutputs(self):

        try:

            # Assign local variables
            args = {
                'arg': self._series,
                'freq': (None 
                         if not self.uiModel.use_freq 
                         else self.uiModel.freq)
                }


            # apply function
            statistic = expanding_count(** args)
            
            return {'series': statistic}

        except Exception as e:

            return self.standard_exception(e)



enamldef SeriesExpandingCount_View(GroupBox):

    attr model

    Form:

        CheckBox:
            tool_tip = model.freq_tooltip
            text = 'Freq'
            checked := model.use_freq
        Label:
            text = 'N/A'
            visible << not model.use_freq
        ObjectCombo:
            items = model.freq_list
            selected := model.freq
            visible << model.use_freq
            tool_tip = model.freq_tooltip