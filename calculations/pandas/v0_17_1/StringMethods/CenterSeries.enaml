# Atom
from atom.api import Atom, Int, Str

# Enaml
from enaml.widgets.api import Form, GroupBox, Label, Notebook, Page
from custom_views.fields import Field, IntField

# Models
from ._base.StringMethod import StringMethod_UI
from ._base.StringMethod import StringMethod_Model
from ._base.StringMethod import StringMethod_View



class CenterSeries_UI(StringMethod_UI):

    # width
    width = Int(10)
    width_tooltip = ('Minimum width of resulting string.\n' +  
                     'Additional characters will be filled with fillchar.')
    # fillchar
    fillchar = Str(' ')
    fillchar_tooltip = \
        'Additional character for filling, default is whitespace.'



class CenterSeries_Model(StringMethod_Model):


    calc_name = 'Center'


    def __init__(self):
        
        self.func_name = 'center'


    def setInputs(self, dataframe = None, series = None):

        self._dataframe = dataframe
        self._series = series
        
        self.ui_args = {}
        self.set_inputs()
        self.uiModel = CenterSeries_UI(** self.ui_args)


    def getArgs(self):
        
        return {
            'width': self.uiModel.width,
            'fillchar': self.uiModel.fillchar
            }



enamldef CenterSeries_View(StringMethod_View): me:

    attr model

    Form:

        Label:
            text = 'Width'
            tool_tip = model.width_tooltip
        IntField:
            value := model.width
            tool_tip = model.width_tooltip

        Label:
            text = 'Fillchar'
            tool_tip = model.fillchar_tooltip
        Field:
            text := model.fillchar
            tool_tip = model.fillchar_tooltip